syntax = "proto2";

package room;

import "base.proto";

// 通用操作结果，客户端直接弹出err_desc提示即可
message Result {
    optional uint32 err_code = 1;//0表示成功
    optional string err_desc = 2;//错误描述由服务端控制
}

//DDZStage:当前游戏状态(恢复对局用)
enum DDZStage{
    DDZ_STAGE_NONE = 0;// 收到DDZStartGameNtf前的状态
    DDZ_STAGE_DEAL = 1;// 发牌
    DDZ_STAGE_CALL = 2;// 叫地主
	DDZ_STAGE_GRAB = 3;// 抢地主
	DDZ_STAGE_DOUBLE = 4;// 加倍
	DDZ_STAGE_PLAYING = 5;// 行牌
    DDZ_STAGE_OVER = 6; // 游戏结束
}

// “Stage切换”可以独立一条消息，也可以嵌入到其他会发生阶段切换的消息体中
message NextStage {
    optional DDZStage stage = 1;// 阶段枚举
    optional uint32 time = 2;// 阶段时间，客户端用于显示倒计时
}

// DDZStartGameNtf 斗地主游戏开始通知
// CMD: 0x15000
message DDZStartGameNtf {
    optional uint64 player_id = 1;//叫地主玩家id
    optional NextStage next_stage = 2; // 目前固定返回DDZ_STAGE_DEAL，后续如果有盲抢地主，盲加倍的玩法，可以先不发牌
}

// DDZDealNtf 发牌通知
// CMD: 0x15001
message DDZDealNtf {
    repeated uint32 cards = 1; // 玩家自身的卡牌，每人17张
    optional NextStage next_stage = 2; // 目前固定返回DDZ_STAGE_CALL，后续如果有随机庄、轮庄等，则跳过叫/抢地主阶段
}

// DDZGrabLordReq 叫/抢地主请求，叫地主和抢地主用同一个请求
// CMD: 0x15002
message DDZGrabLordReq {
    optional bool grab = 1; //是否叫/抢地主
}

// DDZGrabLordRsp 叫/抢地主响应(预留)
// CMD: 0x15003
// message DDZGrabLordRsp {
//     optional Result result = 1;
// }

// DDZGrabLordNtf 叫/抢地主广播
// CMD: 0x15004
message DDZGrabLordNtf {
    optional uint64 player_id = 1;//叫/抢地主玩家id
    optional bool grab = 2;//叫还是弃
    optional uint64 next_player_id = 3;//下一个抢地主玩家，0表示已确定地主
    optional NextStage next_stage = 4; //根据玩家选择返回DDZ_STAGE_CALL或DDZ_STAGE_GRAB
}

// DDZLordNtf 地主广播
// CMD: 0x15005
message DDZLordNtf {
    optional uint64 player_id = 1;//地主玩家id
    optional uint32 total_grab = 2;//抢庄总倍数
    repeated uint32 dipai = 3;//三张底牌，客户端需加入地主玩家手牌
    optional NextStage next_stage = 4; // 目前固定返回DDZ_STAGE_DOUBLE，后续有无需加倍的斗地主，返回其他阶段
}

// DDZDoubleReq 斗地主加倍请求
// CMD: 0x15006
message DDZDoubleReq {
    optional bool is_double = 1; //double是关键字，改名is_double。是否加倍
}

// DDZDoubleRsq 斗地主加倍响应(预留)
// CMD: 0x15007
// message DDZDoubleRsp {
//      optional Result result = 1;
// }

// DDZDoubleNtf 加倍广播
// CMD: 0x15008
message DDZDoubleNtf {
    optional uint64 player_id = 1;//加倍玩家id
    optional bool is_double = 2;//加倍还是不加倍
    optional uint32 total_double = 3;//当前加倍总倍数
    optional NextStage next_stage = 4; // 目前固定返回DDZ_STAGE_PLAYING，后续加倍后如有其他阶段，可返回其他阶段
}

enum CardType {
    CT_NONE = 0;/*!< 无牌型 */
    CT_SINGLE = 1;/*!< 单张 */
    CT_PAIR = 2; /*!< 对子: KK */
    CT_SHUNZI = 3;/*!< 顺子: 34567... */
    CT_PAIRS = 4; /*!< 连对(最少3对): QQKKAA... */
    CT_TRIPLE = 5;/*!< 三张: KKK */
    CT_3AND1 = 6;/*!< 三带一: JJJ+K */
    CT_3AND2 = 7;/*!< 三带一对: JJJ+KK */
    CT_TRIPLES = 8;/*!< 飞机: JJJQQQ... */
    CT_3SAND1S = 9;/*!< 飞机带翅膀: JJJQQQ...+KA... */
    CT_3SAND2S = 10; /*!< 飞机带翅膀: JJJQQQ...+KKAA... */
    CT_4SAND1S = 11; /*!< 四带二: JJJ+QK */
    CT_4SAND2S = 12; /*!< 四带两对: JJJ+QK */
    CT_BOMB = 13; /*!< 炸弹:  KKKK... 默认炸弹比其它牌型大 */
    CT_KINGBOMB = 14; /*!< 火箭:小王+大王*/
}

// DDZPlayCardReq 出牌请求
// CMD: 0x15009
message DDZPlayCardReq {
    repeated uint32 cards = 1; // 玩家出的卡牌，0张牌表示不出或者要不起
    optional CardType card_type = 2; // 保留字段，所选的牌有多个牌型时，玩家选择的牌型，如44445555可选四带两对或飞机带翅膀。目前先不传。
}

// DDZPlayCardRsp 出牌响应
// CMD: 0x1500A
message DDZPlayCardRsp {
    optional Result result = 1; // 0=成功 1=未轮到本玩家出牌 2=所出的牌不在手牌中 3=无法组成牌型 4=牌型与上家不符(包括顺子牌数不足,炸弹不算不符) 5=牌比上家小 6=首轮出牌玩家不能过牌
}

// DDZPlayCardNtf 出牌广播
// CMD: 0x1500B
message DDZPlayCardNtf {
    optional uint64 player_id = 1;//玩家id
    repeated uint32 cards = 2; // 玩家出的卡牌
    optional CardType card_type = 3; // 牌型
    optional uint32 total_bomb = 4;//当前炸弹总倍数
    optional uint64 next_player_id = 5; //下一个出牌玩家
    optional NextStage next_stage = 6; // 返回DDZ_STAGE_PLAYING或DDZ_STAGE_OVER
}

// DDZGameOverNtf 斗地主游戏结束通知
// CMD: 0x1500C
message DDZGameOverNtf {
    optional uint64 winner_id = 1; // 胜利者id
    optional uint32 show_hand_time = 2; //摊牌时间,不显示倒计时,内部倒计时完成后显示结算页面(玩家账单)
    repeated DDZBillPlayerInfo bills = 3;//玩家手牌和结算账单
}

// BillPlayersInfo 结算玩家账单
message DDZBillPlayerInfo {
    optional uint64 player_id = 1;      // 玩家ID
    optional string player_name = 2;    // 玩家昵称
    optional int32 base = 3;            // 底分
    optional int32 multiple = 4;       // 输赢倍数（score = base * multiple）
    optional int64 score = 5;          // 输赢分数(金币场为正数，朋友局可为负数)
    optional int64 current_score = 6;  // 当前分数(金币场为当前金豆数，朋友局忽略)
    optional bool lord = 7;             // 是否为地主
    repeated uint32 out_cards = 8; // 玩家已出的牌
    repeated uint32 hand_cards = 9; // 玩家手牌
}

// DDZTuoGuanReq 托管/取消托管请求
// CMD: 0x1500D
message DDZTuoGuanReq {
    optional bool tuoguan = 1;  // 进入托管还是取消托管， true 表示进入，false 表示取消，目前服务端只处理取消
}

// DDZTuoGuanRsp 托管/取消托管响应(预留)
// CMD: 0x1500E
//message DDZTuoGuanRsp {
//    optional Result result = 1;
//}

// DDZTuoGuanNtf 托管状态通知
// CMD: 0x1500F
message DDZTuoGuanNtf {
    optional bool tuoguan = 1;  // 进入托管还是取消托管， true 表示进入，false 表示取消
}

// TODO 恢复对局（暂定）
// DDZResumeGameReq 恢复对局请求
// CMD: 0x15010
message DDZResumeGameReq{
}

// DDZResumeGameRsp 恢复对局返回
// CMD: 0x15011
message DDZResumeGameRsp{
	optional Result result = 1; 		// 0=成功 1=没有牌局或牌局已结束
	optional DDZDeskInfo game_info = 2;// 游戏信息
}

// DDZDeskInfo 游戏基本信息
message DDZDeskInfo {
    repeated DDZPlayerInfo players = 1;	// 玩家列表
    optional NextStage stage = 2;	// 当前阶段
}

//DDZPlayerInfo 游戏中的玩家信息
message DDZPlayerInfo{
	optional RoomPlayerInfo player_info = 1;//玩家基本信息
    repeated uint32 out_cards = 2; // 玩家已出的牌
    repeated uint32 hand_cards = 3; // 玩家手牌
    optional bool lord = 4; //是否是地主
    optional bool tuoguan = 5; // 是否托管
    optional bool is_double = 6; //是否加倍
}