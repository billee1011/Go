// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gate.proto

/*
Package gate is a generated protocol buffer package.

It is generated from these files:
	gate.proto

It has these top-level messages:
	GateAuthReq
	GateAuthRsp
	GateHeartBeatReq
	GateHeartBeatRsp
	GateAnotherLoginNtf
*/
package gate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrCode int32

const (
	ErrCode_SUCCESS            ErrCode = 0
	ErrCode_UNKNOW             ErrCode = 1
	ErrCode_ERR_INVALID_TOKEN  ErrCode = 101
	ErrCode_ERR_EXPIRE_TOKEN   ErrCode = 102
	ErrCode_ERR_ALREADY_AUTHED ErrCode = 103
)

var ErrCode_name = map[int32]string{
	0:   "SUCCESS",
	1:   "UNKNOW",
	101: "ERR_INVALID_TOKEN",
	102: "ERR_EXPIRE_TOKEN",
	103: "ERR_ALREADY_AUTHED",
}
var ErrCode_value = map[string]int32{
	"SUCCESS":            0,
	"UNKNOW":             1,
	"ERR_INVALID_TOKEN":  101,
	"ERR_EXPIRE_TOKEN":   102,
	"ERR_ALREADY_AUTHED": 103,
}

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}
func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}
func (x *ErrCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrCode_value, data, "ErrCode")
	if err != nil {
		return err
	}
	*x = ErrCode(value)
	return nil
}
func (ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// GateAuthReq 网关认证请求
type GateAuthReq struct {
	PlayerId *uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	// ...
	Expire           *int64  `protobuf:"varint,14,opt,name=expire" json:"expire,omitempty"`
	Token            *string `protobuf:"bytes,15,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GateAuthReq) Reset()                    { *m = GateAuthReq{} }
func (m *GateAuthReq) String() string            { return proto.CompactTextString(m) }
func (*GateAuthReq) ProtoMessage()               {}
func (*GateAuthReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GateAuthReq) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GateAuthReq) GetExpire() int64 {
	if m != nil && m.Expire != nil {
		return *m.Expire
	}
	return 0
}

func (m *GateAuthReq) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

// GateAuthRsp 网关认证应答
type GateAuthRsp struct {
	ErrCode          *ErrCode `protobuf:"varint,1,opt,name=err_code,json=errCode,enum=gate.ErrCode" json:"err_code,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GateAuthRsp) Reset()                    { *m = GateAuthRsp{} }
func (m *GateAuthRsp) String() string            { return proto.CompactTextString(m) }
func (*GateAuthRsp) ProtoMessage()               {}
func (*GateAuthRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GateAuthRsp) GetErrCode() ErrCode {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return ErrCode_SUCCESS
}

// GateHeartBeatReq 心跳检测请求
type GateHeartBeatReq struct {
	TimeStamp        *uint64 `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GateHeartBeatReq) Reset()                    { *m = GateHeartBeatReq{} }
func (m *GateHeartBeatReq) String() string            { return proto.CompactTextString(m) }
func (*GateHeartBeatReq) ProtoMessage()               {}
func (*GateHeartBeatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GateHeartBeatReq) GetTimeStamp() uint64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

// GateHeartBeatRsp 心跳检测应答
type GateHeartBeatRsp struct {
	TimeStamp        *uint64 `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GateHeartBeatRsp) Reset()                    { *m = GateHeartBeatRsp{} }
func (m *GateHeartBeatRsp) String() string            { return proto.CompactTextString(m) }
func (*GateHeartBeatRsp) ProtoMessage()               {}
func (*GateHeartBeatRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GateHeartBeatRsp) GetTimeStamp() uint64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

// GateAnotherLoginNtf 顶号通知
type GateAnotherLoginNtf struct {
	Reserve          *uint32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GateAnotherLoginNtf) Reset()                    { *m = GateAnotherLoginNtf{} }
func (m *GateAnotherLoginNtf) String() string            { return proto.CompactTextString(m) }
func (*GateAnotherLoginNtf) ProtoMessage()               {}
func (*GateAnotherLoginNtf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GateAnotherLoginNtf) GetReserve() uint32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

func init() {
	proto.RegisterType((*GateAuthReq)(nil), "gate.GateAuthReq")
	proto.RegisterType((*GateAuthRsp)(nil), "gate.GateAuthRsp")
	proto.RegisterType((*GateHeartBeatReq)(nil), "gate.GateHeartBeatReq")
	proto.RegisterType((*GateHeartBeatRsp)(nil), "gate.GateHeartBeatRsp")
	proto.RegisterType((*GateAnotherLoginNtf)(nil), "gate.GateAnotherLoginNtf")
	proto.RegisterEnum("gate.ErrCode", ErrCode_name, ErrCode_value)
}

func init() { proto.RegisterFile("gate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x6b, 0xea, 0x40,
	0x14, 0x85, 0x5f, 0x78, 0x3e, 0xa3, 0x57, 0xf4, 0xa5, 0x53, 0x2b, 0x81, 0x52, 0x10, 0x57, 0xa1,
	0x0b, 0xa5, 0xdd, 0x74, 0x1d, 0x75, 0xa8, 0x41, 0x89, 0x65, 0xa2, 0xad, 0xed, 0x26, 0xa4, 0xe6,
	0x1a, 0x43, 0x35, 0x33, 0x9d, 0x4c, 0xa5, 0xfd, 0xf7, 0x65, 0x4c, 0x0a, 0x85, 0x2e, 0xba, 0xbb,
	0xe7, 0x83, 0x73, 0xf9, 0x38, 0x00, 0x49, 0xa4, 0xb0, 0x2f, 0x24, 0x57, 0x9c, 0x54, 0xf4, 0xdd,
	0x5b, 0x41, 0xe3, 0x36, 0x52, 0xe8, 0xbe, 0xa9, 0x2d, 0xc3, 0x57, 0x72, 0x0e, 0x75, 0xb1, 0x8b,
	0x3e, 0x50, 0x86, 0x69, 0x6c, 0x1b, 0x5d, 0xc3, 0xa9, 0xb0, 0x5a, 0x01, 0xbc, 0x98, 0x74, 0xa0,
	0x8a, 0xef, 0x22, 0x95, 0x68, 0xb7, 0xba, 0x86, 0xf3, 0x97, 0x95, 0x89, 0xb4, 0xe1, 0x9f, 0xe2,
	0x2f, 0x98, 0xd9, 0xff, 0xbb, 0x86, 0x53, 0x67, 0x45, 0xe8, 0xdd, 0x7c, 0xfb, 0x9c, 0x0b, 0xe2,
	0x40, 0x0d, 0xa5, 0x0c, 0xd7, 0x3c, 0xc6, 0xe3, 0xe3, 0xd6, 0x75, 0xb3, 0x7f, 0xb4, 0xa1, 0x52,
	0x8e, 0x78, 0x8c, 0xcc, 0xc4, 0xe2, 0xe8, 0x5d, 0x81, 0xa5, 0x8b, 0x13, 0x8c, 0xa4, 0x1a, 0x62,
	0xa4, 0xb4, 0xd7, 0x05, 0x80, 0x4a, 0xf7, 0x18, 0xe6, 0x2a, 0xda, 0x8b, 0x52, 0xac, 0xae, 0x49,
	0xa0, 0xc1, 0xcf, 0x4a, 0x2e, 0x7e, 0xab, 0x0c, 0xe0, 0xf4, 0xa8, 0x97, 0x71, 0xb5, 0x45, 0x39,
	0xe3, 0x49, 0x9a, 0xf9, 0x6a, 0x43, 0x6c, 0x30, 0x25, 0xe6, 0x28, 0x0f, 0x85, 0x65, 0x93, 0x7d,
	0xc5, 0xcb, 0x04, 0xcc, 0x52, 0x95, 0x34, 0xc0, 0x0c, 0x96, 0xa3, 0x11, 0x0d, 0x02, 0xeb, 0x0f,
	0x01, 0xa8, 0x2e, 0xfd, 0xa9, 0x3f, 0x7f, 0xb0, 0x0c, 0x72, 0x06, 0x27, 0x94, 0xb1, 0xd0, 0xf3,
	0xef, 0xdd, 0x99, 0x37, 0x0e, 0x17, 0xf3, 0x29, 0xf5, 0x2d, 0x3d, 0x90, 0xa5, 0x31, 0x5d, 0xdd,
	0x79, 0x8c, 0x96, 0x74, 0x43, 0x3a, 0x40, 0x34, 0x75, 0x67, 0x8c, 0xba, 0xe3, 0xc7, 0xd0, 0x5d,
	0x2e, 0x26, 0x74, 0x6c, 0x25, 0xc3, 0xce, 0x53, 0x3b, 0x57, 0x78, 0xc0, 0xc1, 0x7a, 0x97, 0x62,
	0xa6, 0x42, 0xf1, 0x3c, 0xd0, 0x43, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xcb, 0xd4, 0x52,
	0xbd, 0x01, 0x00, 0x00,
}
