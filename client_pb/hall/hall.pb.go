// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hall.proto

/*
Package hall is a generated protocol buffer package.

It is generated from these files:
	hall.proto

It has these top-level messages:
	HallGetPlayerInfoReq
	HallGetPlayerInfoRsp
	HallUpdatePlayerInfoReq
	HallUpdatePlayerInfoRsp
	HallGetPlayerStateReq
	HallGetPlayerStateRsp
	HallGetGameListInfoReq
	HallGetGameListInfoRsp
	HallRealNameReq
	HallRealNameRsp
*/
package hall

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "steve/client_pb/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// HallGetPlayerInfoReq 获取玩家信息请求
type HallGetPlayerInfoReq struct {
	Reserve          *int32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HallGetPlayerInfoReq) Reset()                    { *m = HallGetPlayerInfoReq{} }
func (m *HallGetPlayerInfoReq) String() string            { return proto.CompactTextString(m) }
func (*HallGetPlayerInfoReq) ProtoMessage()               {}
func (*HallGetPlayerInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HallGetPlayerInfoReq) GetReserve() int32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

// HallGetPlayerInfoRsp 获取玩家信息应答
type HallGetPlayerInfoRsp struct {
	ErrCode          *uint32             `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string             `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	ShowUid          *uint64             `protobuf:"varint,3,opt,name=show_uid,json=showUid" json:"show_uid,omitempty"`
	NickName         *string             `protobuf:"bytes,4,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	Gender           *uint32             `protobuf:"varint,5,opt,name=gender" json:"gender,omitempty"`
	Avator           *string             `protobuf:"bytes,6,opt,name=avator" json:"avator,omitempty"`
	Coin             *uint64             `protobuf:"varint,7,opt,name=coin" json:"coin,omitempty"`
	PlayerState      *common.PlayerState `protobuf:"varint,8,opt,name=player_state,json=playerState,enum=common.PlayerState" json:"player_state,omitempty"`
	GameId           *common.GameId      `protobuf:"varint,9,opt,name=game_id,json=gameId,enum=common.GameId" json:"game_id,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *HallGetPlayerInfoRsp) Reset()                    { *m = HallGetPlayerInfoRsp{} }
func (m *HallGetPlayerInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*HallGetPlayerInfoRsp) ProtoMessage()               {}
func (*HallGetPlayerInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HallGetPlayerInfoRsp) GetErrCode() uint32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HallGetPlayerInfoRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func (m *HallGetPlayerInfoRsp) GetShowUid() uint64 {
	if m != nil && m.ShowUid != nil {
		return *m.ShowUid
	}
	return 0
}

func (m *HallGetPlayerInfoRsp) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *HallGetPlayerInfoRsp) GetGender() uint32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

func (m *HallGetPlayerInfoRsp) GetAvator() string {
	if m != nil && m.Avator != nil {
		return *m.Avator
	}
	return ""
}

func (m *HallGetPlayerInfoRsp) GetCoin() uint64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *HallGetPlayerInfoRsp) GetPlayerState() common.PlayerState {
	if m != nil && m.PlayerState != nil {
		return *m.PlayerState
	}
	return common.PlayerState_PS_IDLE
}

func (m *HallGetPlayerInfoRsp) GetGameId() common.GameId {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return common.GameId_GAMEID_XUELIU
}

// HallUpdatePlayerInfoReq 更新玩家信息请求
type HallUpdatePlayerInfoReq struct {
	Uid              *uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	Avator           *string `protobuf:"bytes,3,opt,name=avator" json:"avator,omitempty"`
	Gender           *uint32 `protobuf:"varint,4,opt,name=gender" json:"gender,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallUpdatePlayerInfoReq) Reset()                    { *m = HallUpdatePlayerInfoReq{} }
func (m *HallUpdatePlayerInfoReq) String() string            { return proto.CompactTextString(m) }
func (*HallUpdatePlayerInfoReq) ProtoMessage()               {}
func (*HallUpdatePlayerInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HallUpdatePlayerInfoReq) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *HallUpdatePlayerInfoReq) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *HallUpdatePlayerInfoReq) GetAvator() string {
	if m != nil && m.Avator != nil {
		return *m.Avator
	}
	return ""
}

func (m *HallUpdatePlayerInfoReq) GetGender() uint32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

// HallUpdatePlayerInfoRsp 更新玩家信应答
type HallUpdatePlayerInfoRsp struct {
	ErrCode          *uint32 `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	Result           *bool   `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallUpdatePlayerInfoRsp) Reset()                    { *m = HallUpdatePlayerInfoRsp{} }
func (m *HallUpdatePlayerInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*HallUpdatePlayerInfoRsp) ProtoMessage()               {}
func (*HallUpdatePlayerInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HallUpdatePlayerInfoRsp) GetErrCode() uint32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HallUpdatePlayerInfoRsp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

// HallGetPlayerStateReq 获取玩家当前状态请求
type HallGetPlayerStateReq struct {
	Reserve          *int32  `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	UserData         *uint64 `protobuf:"varint,2,opt,name=user_data,json=userData" json:"user_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallGetPlayerStateReq) Reset()                    { *m = HallGetPlayerStateReq{} }
func (m *HallGetPlayerStateReq) String() string            { return proto.CompactTextString(m) }
func (*HallGetPlayerStateReq) ProtoMessage()               {}
func (*HallGetPlayerStateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HallGetPlayerStateReq) GetReserve() int32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

func (m *HallGetPlayerStateReq) GetUserData() uint64 {
	if m != nil && m.UserData != nil {
		return *m.UserData
	}
	return 0
}

// HallGetPlayerStateRsp 获取玩家当前状态响应
type HallGetPlayerStateRsp struct {
	PlayerState      *common.PlayerState `protobuf:"varint,1,opt,name=player_state,json=playerState,enum=common.PlayerState" json:"player_state,omitempty"`
	GameId           *common.GameId      `protobuf:"varint,6,opt,name=game_id,json=gameId,enum=common.GameId" json:"game_id,omitempty"`
	UserData         *uint64             `protobuf:"varint,2,opt,name=user_data,json=userData" json:"user_data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *HallGetPlayerStateRsp) Reset()                    { *m = HallGetPlayerStateRsp{} }
func (m *HallGetPlayerStateRsp) String() string            { return proto.CompactTextString(m) }
func (*HallGetPlayerStateRsp) ProtoMessage()               {}
func (*HallGetPlayerStateRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *HallGetPlayerStateRsp) GetPlayerState() common.PlayerState {
	if m != nil && m.PlayerState != nil {
		return *m.PlayerState
	}
	return common.PlayerState_PS_IDLE
}

func (m *HallGetPlayerStateRsp) GetGameId() common.GameId {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return common.GameId_GAMEID_XUELIU
}

func (m *HallGetPlayerStateRsp) GetUserData() uint64 {
	if m != nil && m.UserData != nil {
		return *m.UserData
	}
	return 0
}

// HallGetGameListInfoReq 获取游戏列表信息请求
type HallGetGameListInfoReq struct {
	Reserve          *int32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HallGetGameListInfoReq) Reset()                    { *m = HallGetGameListInfoReq{} }
func (m *HallGetGameListInfoReq) String() string            { return proto.CompactTextString(m) }
func (*HallGetGameListInfoReq) ProtoMessage()               {}
func (*HallGetGameListInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *HallGetGameListInfoReq) GetReserve() int32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

// HallGetGameListInfoRsp 获取游戏列表信息响应
type HallGetGameListInfoRsp struct {
	ErrCode          *uint32                   `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	GameConfig       []*common.GameConfig      `protobuf:"bytes,2,rep,name=game_config,json=gameConfig" json:"game_config,omitempty"`
	GameLevelConfig  []*common.GameLevelConfig `protobuf:"bytes,3,rep,name=game_level_config,json=gameLevelConfig" json:"game_level_config,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *HallGetGameListInfoRsp) Reset()                    { *m = HallGetGameListInfoRsp{} }
func (m *HallGetGameListInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*HallGetGameListInfoRsp) ProtoMessage()               {}
func (*HallGetGameListInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HallGetGameListInfoRsp) GetErrCode() uint32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HallGetGameListInfoRsp) GetGameConfig() []*common.GameConfig {
	if m != nil {
		return m.GameConfig
	}
	return nil
}

func (m *HallGetGameListInfoRsp) GetGameLevelConfig() []*common.GameLevelConfig {
	if m != nil {
		return m.GameLevelConfig
	}
	return nil
}

// HallRealNameReq 实名认证请求
type HallRealNameReq struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	IdCard           *string `protobuf:"bytes,2,opt,name=id_card,json=idCard" json:"id_card,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallRealNameReq) Reset()                    { *m = HallRealNameReq{} }
func (m *HallRealNameReq) String() string            { return proto.CompactTextString(m) }
func (*HallRealNameReq) ProtoMessage()               {}
func (*HallRealNameReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *HallRealNameReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *HallRealNameReq) GetIdCard() string {
	if m != nil && m.IdCard != nil {
		return *m.IdCard
	}
	return ""
}

// HallRealNameRsp 实名认证响应
type HallRealNameRsp struct {
	ErrCode          *uint32 `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	CoinReward       *uint64 `protobuf:"varint,3,opt,name=coin_reward,json=coinReward" json:"coin_reward,omitempty"`
	NewCoin          *uint64 `protobuf:"varint,4,opt,name=new_coin,json=newCoin" json:"new_coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallRealNameRsp) Reset()                    { *m = HallRealNameRsp{} }
func (m *HallRealNameRsp) String() string            { return proto.CompactTextString(m) }
func (*HallRealNameRsp) ProtoMessage()               {}
func (*HallRealNameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *HallRealNameRsp) GetErrCode() uint32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HallRealNameRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func (m *HallRealNameRsp) GetCoinReward() uint64 {
	if m != nil && m.CoinReward != nil {
		return *m.CoinReward
	}
	return 0
}

func (m *HallRealNameRsp) GetNewCoin() uint64 {
	if m != nil && m.NewCoin != nil {
		return *m.NewCoin
	}
	return 0
}

func init() {
	proto.RegisterType((*HallGetPlayerInfoReq)(nil), "hall.HallGetPlayerInfoReq")
	proto.RegisterType((*HallGetPlayerInfoRsp)(nil), "hall.HallGetPlayerInfoRsp")
	proto.RegisterType((*HallUpdatePlayerInfoReq)(nil), "hall.HallUpdatePlayerInfoReq")
	proto.RegisterType((*HallUpdatePlayerInfoRsp)(nil), "hall.HallUpdatePlayerInfoRsp")
	proto.RegisterType((*HallGetPlayerStateReq)(nil), "hall.HallGetPlayerStateReq")
	proto.RegisterType((*HallGetPlayerStateRsp)(nil), "hall.HallGetPlayerStateRsp")
	proto.RegisterType((*HallGetGameListInfoReq)(nil), "hall.HallGetGameListInfoReq")
	proto.RegisterType((*HallGetGameListInfoRsp)(nil), "hall.HallGetGameListInfoRsp")
	proto.RegisterType((*HallRealNameReq)(nil), "hall.HallRealNameReq")
	proto.RegisterType((*HallRealNameRsp)(nil), "hall.HallRealNameRsp")
}

func init() { proto.RegisterFile("hall.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 551 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0x96, 0x13, 0xd7, 0x4e, 0x27, 0xfd, 0xb5, 0x3f, 0x96, 0x92, 0x18, 0x38, 0x10, 0xf9, 0x42,
	0x4e, 0x2d, 0x0a, 0x12, 0x47, 0x0e, 0xa4, 0x52, 0xa9, 0x14, 0x55, 0x68, 0x51, 0x2f, 0x5c, 0xac,
	0xc5, 0x3b, 0x75, 0x57, 0xd8, 0xbb, 0x66, 0x77, 0x93, 0xc0, 0x99, 0x67, 0xe0, 0x21, 0x38, 0xf0,
	0x8e, 0x68, 0xd7, 0x0e, 0x4d, 0x68, 0x08, 0x82, 0x93, 0xe7, 0x8f, 0xbe, 0x9d, 0xf9, 0xbe, 0x99,
	0x31, 0xc0, 0x0d, 0x2b, 0xcb, 0x93, 0x5a, 0x2b, 0xab, 0x48, 0xe8, 0xec, 0x47, 0x07, 0xb9, 0xaa,
	0x2a, 0x25, 0x9b, 0x58, 0xfa, 0x0c, 0x8e, 0x5f, 0xb3, 0xb2, 0x3c, 0x47, 0xfb, 0xa6, 0x64, 0x9f,
	0x51, 0x5f, 0xc8, 0x6b, 0x45, 0xf1, 0x23, 0x49, 0x20, 0xd6, 0x68, 0x50, 0x2f, 0x30, 0x09, 0x46,
	0xc1, 0x78, 0x8f, 0xae, 0xdc, 0xf4, 0x5b, 0x67, 0x1b, 0xc4, 0xd4, 0xe4, 0x21, 0xf4, 0x50, 0xeb,
	0x2c, 0x57, 0xbc, 0xc1, 0xfc, 0x47, 0x63, 0xd4, 0x7a, 0xaa, 0x38, 0xae, 0x52, 0x1c, 0x4d, 0x9e,
	0x74, 0x46, 0xc1, 0x78, 0xdf, 0xa7, 0xce, 0xd0, 0xe4, 0x2e, 0x65, 0x6e, 0xd4, 0x32, 0x9b, 0x0b,
	0x9e, 0x74, 0x47, 0xc1, 0x38, 0xa4, 0xb1, 0xf3, 0xaf, 0x04, 0x27, 0x8f, 0x61, 0x5f, 0x8a, 0xfc,
	0x43, 0x26, 0x59, 0x85, 0x49, 0xe8, 0x61, 0x3d, 0x17, 0xb8, 0x64, 0x15, 0x92, 0x01, 0x44, 0x05,
	0x4a, 0x8e, 0x3a, 0xd9, 0xf3, 0xb5, 0x5a, 0xcf, 0xc5, 0xd9, 0x82, 0x59, 0xa5, 0x93, 0xc8, 0x23,
	0x5a, 0x8f, 0x10, 0x08, 0x73, 0x25, 0x64, 0x12, 0xfb, 0x1a, 0xde, 0x26, 0x2f, 0xe0, 0xa0, 0xf6,
	0x14, 0x32, 0x63, 0x99, 0xc5, 0xa4, 0x37, 0x0a, 0xc6, 0x87, 0x93, 0xfb, 0x27, 0xad, 0x42, 0x0d,
	0xbd, 0xb7, 0x2e, 0x45, 0xfb, 0xf5, 0xad, 0x43, 0x9e, 0x42, 0x5c, 0xb0, 0x0a, 0x33, 0xc1, 0x93,
	0x7d, 0x0f, 0x39, 0x5c, 0x41, 0xce, 0x59, 0x85, 0x17, 0x9c, 0x46, 0x85, 0xff, 0xa6, 0x9f, 0x60,
	0xe8, 0xa4, 0xba, 0xaa, 0x39, 0xb3, 0xb8, 0x29, 0xf0, 0xff, 0xd0, 0x75, 0x94, 0x03, 0xdf, 0x8e,
	0x33, 0x37, 0xe9, 0x76, 0xee, 0xd2, 0x6d, 0x69, 0x75, 0x37, 0x68, 0xdd, 0xca, 0x10, 0xae, 0xcb,
	0x90, 0xce, 0x7e, 0x53, 0x79, 0xf7, 0x9c, 0x06, 0x10, 0x69, 0x34, 0xf3, 0xd2, 0xfa, 0xfa, 0x3d,
	0xda, 0x7a, 0xe9, 0x25, 0x3c, 0xd8, 0x18, 0x79, 0xa3, 0xc9, 0xae, 0x35, 0x71, 0x6c, 0xe6, 0x06,
	0x75, 0xc6, 0x99, 0x65, 0xfe, 0xb5, 0x90, 0xf6, 0x5c, 0xe0, 0x8c, 0x59, 0x96, 0x7e, 0x0d, 0xb6,
	0x3e, 0x68, 0xea, 0x3b, 0x23, 0x09, 0xfe, 0x7e, 0x24, 0xd1, 0xae, 0x91, 0xec, 0xee, 0x6b, 0x02,
	0x83, 0xb6, 0x2d, 0x87, 0x9a, 0x09, 0x63, 0xff, 0x7c, 0x0f, 0xdf, 0x83, 0xed, 0xa0, 0xdd, 0x4a,
	0x3f, 0x87, 0xbe, 0xef, 0x37, 0x57, 0xf2, 0x5a, 0x14, 0x49, 0x67, 0xd4, 0x1d, 0xf7, 0x27, 0x64,
	0xbd, 0xe7, 0xa9, 0xcf, 0x50, 0x28, 0x7e, 0xda, 0x64, 0x0a, 0xf7, 0x3c, 0xa8, 0xc4, 0x05, 0x96,
	0x2b, 0x68, 0xd7, 0x43, 0x87, 0xeb, 0xd0, 0x99, 0xcb, 0xb7, 0xf8, 0xa3, 0x62, 0x33, 0x90, 0xbe,
	0x84, 0x23, 0xd7, 0x2e, 0x45, 0x56, 0xba, 0xcd, 0x72, 0xe4, 0x08, 0x84, 0x7e, 0xe9, 0x02, 0xbf,
	0x5a, 0xde, 0x26, 0x43, 0x88, 0x05, 0xcf, 0x72, 0xa6, 0x79, 0xbb, 0x8b, 0x91, 0xe0, 0x53, 0xa6,
	0x79, 0xfa, 0x25, 0xf8, 0xe5, 0x81, 0x7f, 0x3e, 0xfd, 0x27, 0xd0, 0x77, 0x67, 0x98, 0x69, 0x5c,
	0xba, 0x32, 0xcd, 0xf5, 0x83, 0x0b, 0x51, 0x1f, 0x71, 0x58, 0x89, 0xcb, 0xcc, 0xdf, 0x6d, 0xd8,
	0xfc, 0x1b, 0x24, 0x2e, 0xa7, 0x4a, 0xc8, 0x57, 0x83, 0x77, 0xc7, 0xc6, 0xe2, 0x02, 0x4f, 0xf3,
	0x52, 0xa0, 0xb4, 0x59, 0xfd, 0xfe, 0xd4, 0xfd, 0xdd, 0x7e, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe8,
	0x05, 0x9b, 0xe9, 0xf0, 0x04, 0x00, 0x00,
}
