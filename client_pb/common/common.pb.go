// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package common // import "steve/client_pb/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// GameId 游戏 ID
type GameId int32

const (
	GameId_GAMEID_XUELIU   GameId = 1
	GameId_GAMEID_XUEZHAN  GameId = 2
	GameId_GAMEID_DOUDIZHU GameId = 3
	GameId_GAMEID_ERRENMJ  GameId = 4
)

var GameId_name = map[int32]string{
	1: "GAMEID_XUELIU",
	2: "GAMEID_XUEZHAN",
	3: "GAMEID_DOUDIZHU",
	4: "GAMEID_ERRENMJ",
}
var GameId_value = map[string]int32{
	"GAMEID_XUELIU":   1,
	"GAMEID_XUEZHAN":  2,
	"GAMEID_DOUDIZHU": 3,
	"GAMEID_ERRENMJ":  4,
}

func (x GameId) Enum() *GameId {
	p := new(GameId)
	*p = x
	return p
}
func (x GameId) String() string {
	return proto.EnumName(GameId_name, int32(x))
}
func (x *GameId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameId_value, data, "GameId")
	if err != nil {
		return err
	}
	*x = GameId(value)
	return nil
}
func (GameId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{0}
}

// LocSourceType 位置信息来源类型
type LocSourceType int32

const (
	LocSourceType_LOC_SOURCE_BAIDU  LocSourceType = 0
	LocSourceType_LOC_SOURCE_JIZHAN LocSourceType = 1
)

var LocSourceType_name = map[int32]string{
	0: "LOC_SOURCE_BAIDU",
	1: "LOC_SOURCE_JIZHAN",
}
var LocSourceType_value = map[string]int32{
	"LOC_SOURCE_BAIDU":  0,
	"LOC_SOURCE_JIZHAN": 1,
}

func (x LocSourceType) Enum() *LocSourceType {
	p := new(LocSourceType)
	*p = x
	return p
}
func (x LocSourceType) String() string {
	return proto.EnumName(LocSourceType_name, int32(x))
}
func (x *LocSourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LocSourceType_value, data, "LocSourceType")
	if err != nil {
		return err
	}
	*x = LocSourceType(value)
	return nil
}
func (LocSourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{1}
}

// PlayerState 玩家状态
type PlayerState int32

const (
	PlayerState_PS_IDLE     PlayerState = 0
	PlayerState_PS_GAMEING  PlayerState = 1
	PlayerState_PS_MATCHING PlayerState = 2
)

var PlayerState_name = map[int32]string{
	0: "PS_IDLE",
	1: "PS_GAMEING",
	2: "PS_MATCHING",
}
var PlayerState_value = map[string]int32{
	"PS_IDLE":     0,
	"PS_GAMEING":  1,
	"PS_MATCHING": 2,
}

func (x PlayerState) Enum() *PlayerState {
	p := new(PlayerState)
	*p = x
	return p
}
func (x PlayerState) String() string {
	return proto.EnumName(PlayerState_name, int32(x))
}
func (x *PlayerState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerState_value, data, "PlayerState")
	if err != nil {
		return err
	}
	*x = PlayerState(value)
	return nil
}
func (PlayerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{2}
}

// PlayerGender 玩家性别
type PlayerGender int32

const (
	PlayerGender_PG_NIL    PlayerGender = 0
	PlayerGender_PG_MALE   PlayerGender = 1
	PlayerGender_PG_FEMALE PlayerGender = 2
)

var PlayerGender_name = map[int32]string{
	0: "PG_NIL",
	1: "PG_MALE",
	2: "PG_FEMALE",
}
var PlayerGender_value = map[string]int32{
	"PG_NIL":    0,
	"PG_MALE":   1,
	"PG_FEMALE": 2,
}

func (x PlayerGender) Enum() *PlayerGender {
	p := new(PlayerGender)
	*p = x
	return p
}
func (x PlayerGender) String() string {
	return proto.EnumName(PlayerGender_name, int32(x))
}
func (x *PlayerGender) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerGender_value, data, "PlayerGender")
	if err != nil {
		return err
	}
	*x = PlayerGender(value)
	return nil
}
func (PlayerGender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{3}
}

// Platform 平台
type Platform int32

const (
	Platform_Android Platform = 1
	Platform_Iphone  Platform = 2
)

var Platform_name = map[int32]string{
	1: "Android",
	2: "Iphone",
}
var Platform_value = map[string]int32{
	"Android": 1,
	"Iphone":  2,
}

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}
func (x Platform) String() string {
	return proto.EnumName(Platform_name, int32(x))
}
func (x *Platform) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Platform_value, data, "Platform")
	if err != nil {
		return err
	}
	*x = Platform(value)
	return nil
}
func (Platform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{4}
}

// PropType 互动道具类型
type PropType int32

const (
	PropType_INVALID_PROP PropType = 0
	PropType_ROSE         PropType = 1
	PropType_BEER         PropType = 2
	PropType_BOMB         PropType = 3
	PropType_GRAB_CHICKEN PropType = 4
	PropType_EGG_GUN      PropType = 5
)

var PropType_name = map[int32]string{
	0: "INVALID_PROP",
	1: "ROSE",
	2: "BEER",
	3: "BOMB",
	4: "GRAB_CHICKEN",
	5: "EGG_GUN",
}
var PropType_value = map[string]int32{
	"INVALID_PROP": 0,
	"ROSE":         1,
	"BEER":         2,
	"BOMB":         3,
	"GRAB_CHICKEN": 4,
	"EGG_GUN":      5,
}

func (x PropType) Enum() *PropType {
	p := new(PropType)
	*p = x
	return p
}
func (x PropType) String() string {
	return proto.EnumName(PropType_name, int32(x))
}
func (x *PropType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PropType_value, data, "PropType")
	if err != nil {
		return err
	}
	*x = PropType(value)
	return nil
}
func (PropType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{5}
}

// GeographicalLocation 玩家地理位置
type GeographicalLocation struct {
	Type                 *LocSourceType `protobuf:"varint,1,opt,name=type,enum=common.LocSourceType" json:"type,omitempty"`
	Longitude            *float64       `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Latitude             *float64       `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GeographicalLocation) Reset()         { *m = GeographicalLocation{} }
func (m *GeographicalLocation) String() string { return proto.CompactTextString(m) }
func (*GeographicalLocation) ProtoMessage()    {}
func (*GeographicalLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{0}
}
func (m *GeographicalLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeographicalLocation.Unmarshal(m, b)
}
func (m *GeographicalLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeographicalLocation.Marshal(b, m, deterministic)
}
func (dst *GeographicalLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeographicalLocation.Merge(dst, src)
}
func (m *GeographicalLocation) XXX_Size() int {
	return xxx_messageInfo_GeographicalLocation.Size(m)
}
func (m *GeographicalLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_GeographicalLocation.DiscardUnknown(m)
}

var xxx_messageInfo_GeographicalLocation proto.InternalMessageInfo

func (m *GeographicalLocation) GetType() LocSourceType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return LocSourceType_LOC_SOURCE_BAIDU
}

func (m *GeographicalLocation) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *GeographicalLocation) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

// GameLevelConfig 游戏玩法
type GameConfig struct {
	GameId               *uint32  `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	GameName             *string  `protobuf:"bytes,2,opt,name=game_name,json=gameName" json:"game_name,omitempty"`
	GameType             *uint32  `protobuf:"varint,3,opt,name=game_type,json=gameType" json:"game_type,omitempty"`
	MinPeople            *uint32  `protobuf:"varint,4,opt,name=min_people,json=minPeople" json:"min_people,omitempty"`
	MaxPeople            *uint32  `protobuf:"varint,5,opt,name=max_people,json=maxPeople" json:"max_people,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameConfig) Reset()         { *m = GameConfig{} }
func (m *GameConfig) String() string { return proto.CompactTextString(m) }
func (*GameConfig) ProtoMessage()    {}
func (*GameConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{1}
}
func (m *GameConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameConfig.Unmarshal(m, b)
}
func (m *GameConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameConfig.Marshal(b, m, deterministic)
}
func (dst *GameConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameConfig.Merge(dst, src)
}
func (m *GameConfig) XXX_Size() int {
	return xxx_messageInfo_GameConfig.Size(m)
}
func (m *GameConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GameConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GameConfig proto.InternalMessageInfo

func (m *GameConfig) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *GameConfig) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *GameConfig) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *GameConfig) GetMinPeople() uint32 {
	if m != nil && m.MinPeople != nil {
		return *m.MinPeople
	}
	return 0
}

func (m *GameConfig) GetMaxPeople() uint32 {
	if m != nil && m.MaxPeople != nil {
		return *m.MaxPeople
	}
	return 0
}

// GameLevelConfig 游戏等级
type GameLevelConfig struct {
	GameId               *uint32  `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	LevelId              *uint32  `protobuf:"varint,2,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	LevelName            *string  `protobuf:"bytes,3,opt,name=level_name,json=levelName" json:"level_name,omitempty"`
	BaseScores           *uint32  `protobuf:"varint,4,opt,name=base_scores,json=baseScores" json:"base_scores,omitempty"`
	LowScores            *uint32  `protobuf:"varint,5,opt,name=low_scores,json=lowScores" json:"low_scores,omitempty"`
	HighScors            *uint32  `protobuf:"varint,6,opt,name=high_scors,json=highScors" json:"high_scors,omitempty"`
	ShowPeople           *uint32  `protobuf:"varint,7,opt,name=show_people,json=showPeople" json:"show_people,omitempty"`
	RealPeople           *uint32  `protobuf:"varint,8,opt,name=real_people,json=realPeople" json:"real_people,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameLevelConfig) Reset()         { *m = GameLevelConfig{} }
func (m *GameLevelConfig) String() string { return proto.CompactTextString(m) }
func (*GameLevelConfig) ProtoMessage()    {}
func (*GameLevelConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{2}
}
func (m *GameLevelConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameLevelConfig.Unmarshal(m, b)
}
func (m *GameLevelConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameLevelConfig.Marshal(b, m, deterministic)
}
func (dst *GameLevelConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameLevelConfig.Merge(dst, src)
}
func (m *GameLevelConfig) XXX_Size() int {
	return xxx_messageInfo_GameLevelConfig.Size(m)
}
func (m *GameLevelConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GameLevelConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GameLevelConfig proto.InternalMessageInfo

func (m *GameLevelConfig) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *GameLevelConfig) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *GameLevelConfig) GetLevelName() string {
	if m != nil && m.LevelName != nil {
		return *m.LevelName
	}
	return ""
}

func (m *GameLevelConfig) GetBaseScores() uint32 {
	if m != nil && m.BaseScores != nil {
		return *m.BaseScores
	}
	return 0
}

func (m *GameLevelConfig) GetLowScores() uint32 {
	if m != nil && m.LowScores != nil {
		return *m.LowScores
	}
	return 0
}

func (m *GameLevelConfig) GetHighScors() uint32 {
	if m != nil && m.HighScors != nil {
		return *m.HighScors
	}
	return 0
}

func (m *GameLevelConfig) GetShowPeople() uint32 {
	if m != nil && m.ShowPeople != nil {
		return *m.ShowPeople
	}
	return 0
}

func (m *GameLevelConfig) GetRealPeople() uint32 {
	if m != nil && m.RealPeople != nil {
		return *m.RealPeople
	}
	return 0
}

// Property 互动道具
type Property struct {
	PropId               *uint32   `protobuf:"varint,1,opt,name=prop_id,json=propId" json:"prop_id,omitempty"`
	PropName             *string   `protobuf:"bytes,2,opt,name=prop_name,json=propName" json:"prop_name,omitempty"`
	PropType             *PropType `protobuf:"varint,3,opt,name=prop_type,json=propType,enum=common.PropType" json:"prop_type,omitempty"`
	PropCount            *uint32   `protobuf:"varint,4,opt,name=prop_count,json=propCount" json:"prop_count,omitempty"`
	PropCost             *uint32   `protobuf:"varint,5,opt,name=prop_cost,json=propCost" json:"prop_cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}
func (*Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_dfecae5a5c56c1b1, []int{3}
}
func (m *Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Property.Unmarshal(m, b)
}
func (m *Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Property.Marshal(b, m, deterministic)
}
func (dst *Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Property.Merge(dst, src)
}
func (m *Property) XXX_Size() int {
	return xxx_messageInfo_Property.Size(m)
}
func (m *Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Property proto.InternalMessageInfo

func (m *Property) GetPropId() uint32 {
	if m != nil && m.PropId != nil {
		return *m.PropId
	}
	return 0
}

func (m *Property) GetPropName() string {
	if m != nil && m.PropName != nil {
		return *m.PropName
	}
	return ""
}

func (m *Property) GetPropType() PropType {
	if m != nil && m.PropType != nil {
		return *m.PropType
	}
	return PropType_INVALID_PROP
}

func (m *Property) GetPropCount() uint32 {
	if m != nil && m.PropCount != nil {
		return *m.PropCount
	}
	return 0
}

func (m *Property) GetPropCost() uint32 {
	if m != nil && m.PropCost != nil {
		return *m.PropCost
	}
	return 0
}

func init() {
	proto.RegisterType((*GeographicalLocation)(nil), "common.GeographicalLocation")
	proto.RegisterType((*GameConfig)(nil), "common.GameConfig")
	proto.RegisterType((*GameLevelConfig)(nil), "common.GameLevelConfig")
	proto.RegisterType((*Property)(nil), "common.Property")
	proto.RegisterEnum("common.GameId", GameId_name, GameId_value)
	proto.RegisterEnum("common.LocSourceType", LocSourceType_name, LocSourceType_value)
	proto.RegisterEnum("common.PlayerState", PlayerState_name, PlayerState_value)
	proto.RegisterEnum("common.PlayerGender", PlayerGender_name, PlayerGender_value)
	proto.RegisterEnum("common.Platform", Platform_name, Platform_value)
	proto.RegisterEnum("common.PropType", PropType_name, PropType_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_dfecae5a5c56c1b1) }

var fileDescriptor_common_dfecae5a5c56c1b1 = []byte{
	// 693 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x4d, 0x6f, 0xda, 0x48,
	0x18, 0xc7, 0xb1, 0x21, 0x60, 0x1e, 0x02, 0x99, 0xcc, 0x26, 0xbb, 0xec, 0x9b, 0x12, 0x65, 0x2f,
	0x59, 0xa4, 0x26, 0x52, 0x0e, 0xbd, 0xb4, 0x17, 0x03, 0xae, 0x71, 0x6a, 0x8c, 0x65, 0x87, 0x2a,
	0xcd, 0x65, 0x34, 0x31, 0x13, 0xb0, 0x64, 0x7b, 0x2c, 0xdb, 0x79, 0x41, 0x3d, 0xf7, 0x63, 0xf4,
	0x13, 0xf4, 0x4b, 0x56, 0x33, 0x36, 0x84, 0x9e, 0x7a, 0xe3, 0xf9, 0xff, 0xfe, 0xf3, 0xbc, 0x1a,
	0xd8, 0x0f, 0x78, 0x1c, 0xf3, 0xe4, 0x22, 0xcd, 0x78, 0xc1, 0x71, 0xb3, 0x8c, 0xce, 0xbe, 0xc0,
	0x91, 0xc9, 0xf8, 0x32, 0xa3, 0xe9, 0x2a, 0x0c, 0x68, 0x64, 0xf3, 0x80, 0x16, 0x21, 0x4f, 0xf0,
	0xff, 0xd0, 0x28, 0xd6, 0x29, 0xeb, 0x2b, 0xa7, 0xca, 0x79, 0xef, 0xea, 0xf8, 0xa2, 0x7a, 0x6c,
	0xf3, 0xc0, 0xe7, 0x8f, 0x59, 0xc0, 0x6e, 0xd6, 0x29, 0xf3, 0xa4, 0x05, 0xff, 0x03, 0xed, 0x88,
	0x27, 0xcb, 0xb0, 0x78, 0x5c, 0xb0, 0xbe, 0x7a, 0xaa, 0x9c, 0x2b, 0xde, 0xab, 0x80, 0xff, 0x02,
	0x2d, 0xa2, 0x45, 0x09, 0xeb, 0x12, 0x6e, 0xe3, 0xb3, 0x6f, 0x0a, 0x80, 0x49, 0x63, 0x36, 0xe2,
	0xc9, 0x43, 0xb8, 0xc4, 0x7f, 0x40, 0x6b, 0x49, 0x63, 0x46, 0xc2, 0x85, 0x2c, 0xdb, 0xf5, 0x9a,
	0x22, 0xb4, 0x16, 0xf8, 0x6f, 0x68, 0x4b, 0x90, 0xd0, 0xb8, 0xac, 0xd0, 0xf6, 0x34, 0x21, 0x38,
	0x34, 0x66, 0x5b, 0x28, 0xdb, 0xad, 0xcb, 0x77, 0x12, 0x8a, 0x0e, 0xf1, 0xbf, 0x00, 0x71, 0x98,
	0x90, 0x94, 0xf1, 0x34, 0x62, 0xfd, 0x86, 0xa4, 0xed, 0x38, 0x4c, 0x5c, 0x29, 0x48, 0x4c, 0x5f,
	0x36, 0x78, 0xaf, 0xc2, 0xf4, 0xa5, 0xc4, 0x67, 0x5f, 0x55, 0x38, 0x10, 0xfd, 0xd9, 0xec, 0x89,
	0x45, 0xbf, 0x6a, 0xf2, 0x4f, 0xd0, 0x22, 0xe1, 0x13, 0x44, 0x95, 0xa4, 0x25, 0x63, 0x6b, 0x21,
	0xca, 0x94, 0x48, 0x0e, 0x50, 0x97, 0x03, 0xb4, 0xa5, 0x22, 0x27, 0x38, 0x81, 0xce, 0x3d, 0xcd,
	0x19, 0xc9, 0x03, 0x9e, 0xb1, 0xbc, 0xea, 0x12, 0x84, 0xe4, 0x4b, 0x45, 0xbe, 0xe7, 0xcf, 0x1b,
	0x5e, 0xb5, 0x19, 0xf1, 0xe7, 0x57, 0xbc, 0x0a, 0x97, 0x2b, 0xc9, 0xf3, 0x7e, 0xb3, 0xc4, 0x42,
	0x11, 0x3c, 0x17, 0xe9, 0xf3, 0x15, 0x7f, 0xde, 0x4c, 0xd9, 0x2a, 0xd3, 0x0b, 0xa9, 0xda, 0xc2,
	0x09, 0x74, 0x32, 0x46, 0xa3, 0x8d, 0x41, 0x2b, 0x0d, 0x42, 0xaa, 0xf6, 0xf0, 0x5d, 0x01, 0xcd,
	0xcd, 0x78, 0xca, 0xb2, 0x62, 0x2d, 0x16, 0x90, 0x66, 0x3c, 0xdd, 0x59, 0x80, 0x08, 0xcb, 0x2b,
	0x49, 0xb0, 0x7b, 0x25, 0x21, 0xc8, 0x19, 0xdf, 0x54, 0x70, 0x7b, 0xa5, 0xde, 0x15, 0xda, 0x7c,
	0x54, 0x22, 0xb5, 0xfc, 0x9e, 0xa4, 0x7d, 0x73, 0x37, 0x69, 0x0f, 0xf8, 0x63, 0x52, 0x6c, 0xee,
	0x26, 0x94, 0x91, 0x10, 0xb6, 0xa5, 0x02, 0x9e, 0x17, 0xd5, 0x3e, 0xb4, 0x92, 0xe6, 0xc5, 0xe0,
	0x16, 0x9a, 0x66, 0x79, 0x92, 0x43, 0xe8, 0x9a, 0xfa, 0xd4, 0xb0, 0xc6, 0xe4, 0x76, 0x6e, 0xd8,
	0xd6, 0x1c, 0x29, 0x18, 0x43, 0xef, 0x55, 0xba, 0x9b, 0xe8, 0x0e, 0x52, 0xf1, 0x6f, 0x70, 0x50,
	0x69, 0xe3, 0xd9, 0x7c, 0x6c, 0xdd, 0x4d, 0xe6, 0xa8, 0xbe, 0x63, 0x34, 0x3c, 0xcf, 0x70, 0xa6,
	0xd7, 0xa8, 0x31, 0x78, 0x0f, 0xdd, 0x9f, 0xfe, 0x00, 0xf8, 0x08, 0x90, 0x3d, 0x1b, 0x11, 0x7f,
	0x36, 0xf7, 0x46, 0x06, 0x19, 0xea, 0xd6, 0x78, 0x8e, 0x6a, 0xf8, 0x18, 0x0e, 0x77, 0xd4, 0x6b,
	0x4b, 0x96, 0x51, 0x06, 0xef, 0xa0, 0xe3, 0x46, 0x74, 0xcd, 0x32, 0xbf, 0xa0, 0x05, 0xc3, 0x1d,
	0x68, 0xb9, 0x3e, 0xb1, 0xc6, 0xb6, 0x81, 0x6a, 0xb8, 0x07, 0xe0, 0xfa, 0x44, 0x16, 0x74, 0x4c,
	0xa4, 0xe0, 0x03, 0xe8, 0xb8, 0x3e, 0x99, 0xea, 0x37, 0xa3, 0x89, 0x10, 0xd4, 0xc1, 0x5b, 0xd8,
	0x2f, 0x1f, 0x9b, 0x2c, 0x59, 0xb0, 0x0c, 0x03, 0x34, 0x5d, 0x93, 0x38, 0x96, 0x8d, 0x6a, 0x32,
	0x93, 0x49, 0xa6, 0xba, 0x6d, 0x20, 0x05, 0x77, 0xa1, 0xed, 0x9a, 0xe4, 0x83, 0x21, 0x43, 0x75,
	0xf0, 0x1f, 0x68, 0x6e, 0x44, 0x8b, 0x07, 0x9e, 0xc5, 0xc2, 0xa7, 0x27, 0x8b, 0x8c, 0x87, 0x0b,
	0xa4, 0x88, 0x04, 0x56, 0xba, 0xe2, 0x09, 0x43, 0xea, 0xe0, 0x73, 0x79, 0x5e, 0x39, 0x12, 0x82,
	0x7d, 0xcb, 0xf9, 0xa4, 0xdb, 0xd6, 0x98, 0xb8, 0xde, 0xcc, 0x45, 0x35, 0xac, 0x41, 0xc3, 0x9b,
	0xf9, 0x22, 0xb7, 0x06, 0x8d, 0xa1, 0x61, 0x78, 0x48, 0x95, 0xbf, 0x66, 0xd3, 0x21, 0xaa, 0x0b,
	0xbf, 0xe9, 0xe9, 0x43, 0x32, 0x9a, 0x58, 0xa3, 0x8f, 0x86, 0x83, 0x1a, 0xa2, 0x8c, 0x61, 0x9a,
	0xc4, 0x9c, 0x3b, 0x68, 0x6f, 0xd8, 0xbf, 0xfb, 0x3d, 0x2f, 0xd8, 0x13, 0xbb, 0x0c, 0xa2, 0x90,
	0x25, 0x05, 0x49, 0xef, 0x2f, 0xcb, 0xab, 0xff, 0x08, 0x00, 0x00, 0xff, 0xff, 0xac, 0x4e, 0xa4,
	0xfd, 0x90, 0x04, 0x00, 0x00,
}
