// Code generated by protoc-gen-go. DO NOT EDIT.
// source: match.proto

/*
Package match is a generated protocol buffer package.

It is generated from these files:
	match.proto

It has these top-level messages:
	MatchReq
	MatchRsp
	MatchDeskContinueReq
	MatchDeskContinueRsp
	MatchContinueDeskDimissNtf
*/
package match

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "steve/client_pb/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// MatchReq 匹配请求
type MatchReq struct {
	Reserve          *uint32                        `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	GameId           *common.GameId                 `protobuf:"varint,2,opt,name=game_id,json=gameId,enum=common.GameId" json:"game_id,omitempty"`
<<<<<<< Updated upstream
	Location         []*common.GeographicalLocation `protobuf:"bytes,3,rep,name=location" json:"location,omitempty"`
=======
	LevelId          *uint32                        `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	Location         []*common.GeographicalLocation `protobuf:"bytes,4,rep,name=location" json:"location,omitempty"`
>>>>>>> Stashed changes
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *MatchReq) Reset()                    { *m = MatchReq{} }
func (m *MatchReq) String() string            { return proto.CompactTextString(m) }
func (*MatchReq) ProtoMessage()               {}
func (*MatchReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MatchReq) GetReserve() uint32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

func (m *MatchReq) GetGameId() common.GameId {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return common.GameId_GAMEID_XUELIU
}

func (m *MatchReq) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *MatchReq) GetLocation() []*common.GeographicalLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

// MatchRsp 匹配应答
type MatchRsp struct {
	ErrCode          *int32         `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string        `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	GameId           *common.GameId `protobuf:"varint,3,opt,name=game_id,json=gameId,enum=common.GameId" json:"game_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *MatchRsp) Reset()                    { *m = MatchRsp{} }
func (m *MatchRsp) String() string            { return proto.CompactTextString(m) }
func (*MatchRsp) ProtoMessage()               {}
func (*MatchRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MatchRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *MatchRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func (m *MatchRsp) GetGameId() common.GameId {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return common.GameId_GAMEID_XUELIU
}

// MatchDeskContinueReq 续局请求
type MatchDeskContinueReq struct {
	GameId           *common.GameId                 `protobuf:"varint,1,opt,name=game_id,json=gameId,enum=common.GameId" json:"game_id,omitempty"`
	Location         []*common.GeographicalLocation `protobuf:"bytes,2,rep,name=location" json:"location,omitempty"`
	Cancel           *bool                          `protobuf:"varint,3,opt,name=cancel" json:"cancel,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *MatchDeskContinueReq) Reset()                    { *m = MatchDeskContinueReq{} }
func (m *MatchDeskContinueReq) String() string            { return proto.CompactTextString(m) }
func (*MatchDeskContinueReq) ProtoMessage()               {}
func (*MatchDeskContinueReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MatchDeskContinueReq) GetGameId() common.GameId {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return common.GameId_GAMEID_XUELIU
}

func (m *MatchDeskContinueReq) GetLocation() []*common.GeographicalLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *MatchDeskContinueReq) GetCancel() bool {
	if m != nil && m.Cancel != nil {
		return *m.Cancel
	}
	return false
}

// MatchDeskContinueRsp 续局应答
type MatchDeskContinueRsp struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchDeskContinueRsp) Reset()                    { *m = MatchDeskContinueRsp{} }
func (m *MatchDeskContinueRsp) String() string            { return proto.CompactTextString(m) }
func (*MatchDeskContinueRsp) ProtoMessage()               {}
func (*MatchDeskContinueRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MatchDeskContinueRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *MatchDeskContinueRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

// MatchContinueDeskDimissNtf 续局牌桌解散通知
type MatchContinueDeskDimissNtf struct {
	Reserve          *int32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MatchContinueDeskDimissNtf) Reset()                    { *m = MatchContinueDeskDimissNtf{} }
func (m *MatchContinueDeskDimissNtf) String() string            { return proto.CompactTextString(m) }
func (*MatchContinueDeskDimissNtf) ProtoMessage()               {}
func (*MatchContinueDeskDimissNtf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MatchContinueDeskDimissNtf) GetReserve() int32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

func init() {
	proto.RegisterType((*MatchReq)(nil), "match.MatchReq")
	proto.RegisterType((*MatchRsp)(nil), "match.MatchRsp")
	proto.RegisterType((*MatchDeskContinueReq)(nil), "match.MatchDeskContinueReq")
	proto.RegisterType((*MatchDeskContinueRsp)(nil), "match.MatchDeskContinueRsp")
	proto.RegisterType((*MatchContinueDeskDimissNtf)(nil), "match.MatchContinueDeskDimissNtf")
}

func init() { proto.RegisterFile("match.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
<<<<<<< Updated upstream
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0xe5, 0x56, 0x6d, 0x82, 0x0b, 0x1d, 0x2c, 0xfe, 0x84, 0x8a, 0x21, 0xca, 0x42, 0xa6,
	0x56, 0xea, 0x80, 0x98, 0x69, 0x24, 0x84, 0x54, 0x18, 0x3c, 0xb2, 0x44, 0xc6, 0x39, 0x52, 0x8b,
	0xd8, 0x0e, 0xb6, 0xe9, 0x57, 0x60, 0xe6, 0x1b, 0xa3, 0xb8, 0x49, 0x54, 0x21, 0x84, 0x80, 0x29,
	0x7a, 0x77, 0x4f, 0x2f, 0xbf, 0xbb, 0x33, 0x9e, 0x48, 0xe6, 0xf8, 0x66, 0x5e, 0x1b, 0xed, 0x34,
	0x19, 0x79, 0x31, 0x3b, 0xe4, 0x5a, 0x4a, 0xad, 0x76, 0xc5, 0xe4, 0x1d, 0xe1, 0xf0, 0xbe, 0xa9,
	0x53, 0x78, 0x25, 0x11, 0x0e, 0x0c, 0x58, 0x30, 0x5b, 0x88, 0x50, 0x8c, 0xd2, 0x23, 0xda, 0x49,
	0x72, 0x89, 0x83, 0x92, 0x49, 0xc8, 0x45, 0x11, 0x0d, 0x62, 0x94, 0x4e, 0x97, 0xd3, 0x79, 0x1b,
	0x73, 0xcb, 0x24, 0xdc, 0x15, 0x74, 0x5c, 0xfa, 0x2f, 0xb9, 0xc6, 0x61, 0xa5, 0x39, 0x73, 0x42,
	0xab, 0x68, 0x18, 0x0f, 0xd3, 0xc9, 0xf2, 0xa2, 0x77, 0x82, 0x2e, 0x0d, 0xab, 0x37, 0x82, 0xb3,
	0x6a, 0xdd, 0x7a, 0x68, 0xef, 0x4e, 0x44, 0x07, 0x62, 0x6b, 0x72, 0x8e, 0x43, 0x30, 0x26, 0xe7,
	0xba, 0xd8, 0x91, 0x8c, 0x68, 0x00, 0xc6, 0xac, 0x74, 0x01, 0x5d, 0xab, 0x00, 0xcb, 0x3d, 0xca,
	0x81, 0x6f, 0x65, 0x60, 0xf9, 0x3e, 0xe4, 0xf0, 0x27, 0xc8, 0xe4, 0x03, 0xe1, 0x63, 0xff, 0xaf,
	0x0c, 0xec, 0xcb, 0x4a, 0x2b, 0x27, 0xd4, 0x1b, 0x34, 0x0b, 0xd8, 0x4b, 0x40, 0xbf, 0x1e, 0x73,
	0xf0, 0x97, 0x31, 0xc9, 0x29, 0x1e, 0x73, 0xa6, 0x38, 0x54, 0x9e, 0x31, 0xa4, 0xad, 0x4a, 0xd6,
	0xdf, 0x21, 0xfd, 0x77, 0x15, 0xc9, 0x15, 0x9e, 0xf9, 0xb4, 0x2e, 0xa9, 0x49, 0xcd, 0x84, 0x14,
	0xd6, 0x3e, 0xb8, 0xe7, 0xaf, 0x77, 0x1e, 0xf5, 0x77, 0xbe, 0x39, 0x7b, 0x3c, 0xb1, 0x0e, 0xb6,
	0xb0, 0xe0, 0x95, 0x00, 0xe5, 0xf2, 0xfa, 0x69, 0xe1, 0x5f, 0xcd, 0x67, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x73, 0xbc, 0xa8, 0x32, 0x4a, 0x02, 0x00, 0x00,
=======
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0x49, 0x6b, 0xdb, 0x35, 0xd5, 0x1e, 0x82, 0x1f, 0x6b, 0xf1, 0x50, 0xf6, 0x62, 0x4f,
	0x2d, 0xf4, 0x20, 0x9e, 0x6d, 0x41, 0x0a, 0xd5, 0x43, 0x8e, 0x5e, 0x4a, 0x4c, 0xc6, 0x36, 0x98,
	0x8f, 0x35, 0x89, 0x7d, 0x0f, 0x5f, 0xc1, 0x27, 0x95, 0x4d, 0x77, 0x97, 0x45, 0xa4, 0xa0, 0xa7,
	0xf0, 0x4f, 0x86, 0x5f, 0x7e, 0x33, 0x0c, 0xee, 0x6b, 0x16, 0xf8, 0x76, 0x92, 0x3b, 0x1b, 0x2c,
	0xe9, 0xc4, 0x30, 0x3c, 0xe1, 0x56, 0x6b, 0x6b, 0xf6, 0x97, 0xd9, 0x17, 0xc2, 0xc9, 0x63, 0x71,
	0x4f, 0xe1, 0x9d, 0xa4, 0xb8, 0xe7, 0xc0, 0x83, 0xdb, 0x41, 0x8a, 0x46, 0x68, 0x7c, 0x4a, 0xab,
	0x48, 0x6e, 0x70, 0x6f, 0xc3, 0x34, 0xac, 0xa5, 0x48, 0x5b, 0x23, 0x34, 0x1e, 0xcc, 0x06, 0x93,
	0x12, 0xf3, 0xc0, 0x34, 0x2c, 0x05, 0xed, 0x6e, 0xe2, 0x49, 0xae, 0x70, 0xa2, 0x60, 0x07, 0xaa,
	0xa8, 0x6c, 0xef, 0x19, 0x31, 0x2f, 0x05, 0xb9, 0xc3, 0x89, 0xb2, 0x9c, 0x05, 0x69, 0x4d, 0x7a,
	0x34, 0x6a, 0x8f, 0xfb, 0xb3, 0xeb, 0x1a, 0x02, 0x76, 0xe3, 0x58, 0xbe, 0x95, 0x9c, 0xa9, 0x55,
	0x59, 0x43, 0xeb, 0xea, 0x4c, 0x56, 0x8e, 0x3e, 0x2f, 0x3e, 0x00, 0xe7, 0xd6, 0xdc, 0x8a, 0xbd,
	0x64, 0x87, 0xf6, 0xc0, 0xb9, 0xb9, 0x15, 0x50, 0x3d, 0x09, 0xf0, 0x3c, 0x5a, 0x1e, 0xc7, 0xa7,
	0x05, 0x78, 0xde, 0xf4, 0x6f, 0x1f, 0xf2, 0xcf, 0x3e, 0x11, 0x3e, 0x8b, 0x7f, 0x2d, 0xc0, 0xbf,
	0xcd, 0xad, 0x09, 0xd2, 0x7c, 0x40, 0x31, 0x9b, 0x06, 0x01, 0x1d, 0x9c, 0x40, 0xb3, 0xcd, 0xd6,
	0x5f, 0xda, 0x24, 0x17, 0xb8, 0xcb, 0x99, 0xe1, 0xa0, 0xa2, 0x63, 0x42, 0xcb, 0x94, 0xad, 0x7e,
	0x53, 0xfa, 0xef, 0x28, 0xb2, 0x5b, 0x3c, 0x8c, 0xb4, 0x8a, 0x54, 0x50, 0x17, 0x52, 0x4b, 0xef,
	0x9f, 0xc2, 0xeb, 0xcf, 0x15, 0xe8, 0xd4, 0x2b, 0x70, 0x7f, 0xf9, 0x7c, 0xee, 0x03, 0xec, 0x60,
	0xca, 0x95, 0x04, 0x13, 0xd6, 0xf9, 0xcb, 0x34, 0x2e, 0xd4, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x18, 0xfe, 0x5e, 0x3a, 0x65, 0x02, 0x00, 0x00,
>>>>>>> Stashed changes
}
