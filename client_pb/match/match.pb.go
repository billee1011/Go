// Code generated by protoc-gen-go. DO NOT EDIT.
// source: match.proto

package match

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "steve/client_pb/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// MatchReq 匹配请求
type MatchReq struct {
	Reserve          *uint32                        `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	GameId           *uint32                        `protobuf:"varint,2,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	LevelId          *uint32                        `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	Location         []*common.GeographicalLocation `protobuf:"bytes,4,rep,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *MatchReq) Reset()                    { *m = MatchReq{} }
func (m *MatchReq) String() string            { return proto.CompactTextString(m) }
func (*MatchReq) ProtoMessage()               {}
func (*MatchReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MatchReq) GetReserve() uint32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

func (m *MatchReq) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *MatchReq) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *MatchReq) GetLocation() []*common.GeographicalLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

// MatchRsp 匹配应答
type MatchRsp struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	GameId           *uint32 `protobuf:"varint,3,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchRsp) Reset()                    { *m = MatchRsp{} }
func (m *MatchRsp) String() string            { return proto.CompactTextString(m) }
func (*MatchRsp) ProtoMessage()               {}
func (*MatchRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MatchRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *MatchRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func (m *MatchRsp) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

// MatchDeskContinueReq 续局请求
type MatchDeskContinueReq struct {
	GameId           *uint32                        `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	Location         []*common.GeographicalLocation `protobuf:"bytes,2,rep,name=location" json:"location,omitempty"`
	Cancel           *bool                          `protobuf:"varint,3,opt,name=cancel" json:"cancel,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *MatchDeskContinueReq) Reset()                    { *m = MatchDeskContinueReq{} }
func (m *MatchDeskContinueReq) String() string            { return proto.CompactTextString(m) }
func (*MatchDeskContinueReq) ProtoMessage()               {}
func (*MatchDeskContinueReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *MatchDeskContinueReq) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *MatchDeskContinueReq) GetLocation() []*common.GeographicalLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *MatchDeskContinueReq) GetCancel() bool {
	if m != nil && m.Cancel != nil {
		return *m.Cancel
	}
	return false
}

// MatchDeskContinueRsp 续局应答
type MatchDeskContinueRsp struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchDeskContinueRsp) Reset()                    { *m = MatchDeskContinueRsp{} }
func (m *MatchDeskContinueRsp) String() string            { return proto.CompactTextString(m) }
func (*MatchDeskContinueRsp) ProtoMessage()               {}
func (*MatchDeskContinueRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *MatchDeskContinueRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *MatchDeskContinueRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

// MatchContinueDeskDimissNtf 续局牌桌解散通知
type MatchContinueDeskDimissNtf struct {
	Reserve          *int32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MatchContinueDeskDimissNtf) Reset()                    { *m = MatchContinueDeskDimissNtf{} }
func (m *MatchContinueDeskDimissNtf) String() string            { return proto.CompactTextString(m) }
func (*MatchContinueDeskDimissNtf) ProtoMessage()               {}
func (*MatchContinueDeskDimissNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *MatchContinueDeskDimissNtf) GetReserve() int32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

// CancelMatchReq 取消匹配请求
type CancelMatchReq struct {
	Reserve          *uint32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CancelMatchReq) Reset()                    { *m = CancelMatchReq{} }
func (m *CancelMatchReq) String() string            { return proto.CompactTextString(m) }
func (*CancelMatchReq) ProtoMessage()               {}
func (*CancelMatchReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *CancelMatchReq) GetReserve() uint32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

// CancelMatchRsp 匹配应答
type CancelMatchRsp struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CancelMatchRsp) Reset()                    { *m = CancelMatchRsp{} }
func (m *CancelMatchRsp) String() string            { return proto.CompactTextString(m) }
func (*CancelMatchRsp) ProtoMessage()               {}
func (*CancelMatchRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *CancelMatchRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *CancelMatchRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func init() {
	proto.RegisterType((*MatchReq)(nil), "match.MatchReq")
	proto.RegisterType((*MatchRsp)(nil), "match.MatchRsp")
	proto.RegisterType((*MatchDeskContinueReq)(nil), "match.MatchDeskContinueReq")
	proto.RegisterType((*MatchDeskContinueRsp)(nil), "match.MatchDeskContinueRsp")
	proto.RegisterType((*MatchContinueDeskDimissNtf)(nil), "match.MatchContinueDeskDimissNtf")
	proto.RegisterType((*CancelMatchReq)(nil), "match.CancelMatchReq")
	proto.RegisterType((*CancelMatchRsp)(nil), "match.CancelMatchRsp")
}

func init() { proto.RegisterFile("match.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x4e, 0x32, 0x31,
	0x14, 0x85, 0x33, 0xf0, 0x03, 0xf3, 0x17, 0x75, 0xd1, 0xa8, 0x8c, 0xc4, 0x05, 0xe9, 0x8a, 0xb8,
	0x80, 0xc4, 0x85, 0x71, 0x2d, 0x44, 0x43, 0x82, 0x2e, 0x66, 0xa7, 0x1b, 0x52, 0xdb, 0x2b, 0x34,
	0x76, 0xda, 0xb1, 0xad, 0xb3, 0xf7, 0x15, 0x7c, 0x62, 0xd3, 0xce, 0x0c, 0x19, 0x8c, 0x89, 0x91,
	0xe5, 0xe9, 0xb9, 0x3d, 0xfd, 0x4e, 0x6e, 0x51, 0x3f, 0xa3, 0x8e, 0x6d, 0x26, 0xb9, 0xd1, 0x4e,
	0xe3, 0x4e, 0x10, 0xc3, 0x03, 0xa6, 0xb3, 0x4c, 0xab, 0xf2, 0x90, 0x7c, 0x46, 0x28, 0xbe, 0xf7,
	0xe7, 0x29, 0xbc, 0xe1, 0x04, 0xf5, 0x0c, 0x58, 0x30, 0x05, 0x24, 0xd1, 0x28, 0x1a, 0x1f, 0xa6,
	0xb5, 0xc4, 0x03, 0xd4, 0x5b, 0xd3, 0x0c, 0x56, 0x82, 0x27, 0xad, 0xe0, 0x74, 0xbd, 0x5c, 0x70,
	0x7c, 0x86, 0x62, 0x09, 0x05, 0x48, 0xef, 0xb4, 0xcb, 0x3b, 0x41, 0x2f, 0x38, 0xbe, 0x46, 0xb1,
	0xd4, 0x8c, 0x3a, 0xa1, 0x55, 0xf2, 0x6f, 0xd4, 0x1e, 0xf7, 0x2f, 0xcf, 0x27, 0xd5, 0xdb, 0x77,
	0xa0, 0xd7, 0x86, 0xe6, 0x1b, 0xc1, 0xa8, 0x5c, 0x56, 0x33, 0xe9, 0x76, 0x9a, 0x3c, 0xd6, 0x4c,
	0x36, 0xf7, 0x0f, 0x80, 0x31, 0x2b, 0xa6, 0x79, 0x09, 0xd5, 0x49, 0x7b, 0x60, 0xcc, 0x4c, 0x73,
	0xa8, 0x2d, 0x0e, 0x96, 0x05, 0xaa, 0xff, 0xc1, 0x9a, 0x83, 0x65, 0x4d, 0xde, 0x76, 0x93, 0x97,
	0x7c, 0x44, 0xe8, 0x38, 0x64, 0xcf, 0xc1, 0xbe, 0xce, 0xb4, 0x72, 0x42, 0xbd, 0x83, 0xef, 0xde,
	0xb8, 0x11, 0xed, 0x34, 0x6c, 0xd6, 0x68, 0xfd, 0xa5, 0x06, 0x3e, 0x45, 0x5d, 0x46, 0x15, 0x03,
	0x19, 0x18, 0xe2, 0xb4, 0x52, 0x64, 0xf9, 0x13, 0xc2, 0xbe, 0x55, 0xc9, 0x15, 0x1a, 0x86, 0xb4,
	0x3a, 0xc9, 0xa7, 0xce, 0x45, 0x26, 0xac, 0x7d, 0x70, 0x2f, 0xdf, 0x57, 0xda, 0xd9, 0xae, 0x94,
	0x5c, 0xa0, 0xa3, 0x59, 0xe0, 0xf9, 0x7d, 0xfd, 0xe4, 0x76, 0x77, 0x76, 0x5f, 0xd6, 0x9b, 0xc1,
	0xd3, 0x89, 0x75, 0x50, 0xc0, 0x94, 0x49, 0x01, 0xca, 0xad, 0xf2, 0xe7, 0x69, 0xf8, 0x94, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xc1, 0xcb, 0xcc, 0xa9, 0x02, 0x00, 0x00,
}
