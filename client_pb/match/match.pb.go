// Code generated by protoc-gen-go. DO NOT EDIT.
// source: match.proto

package match

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "steve/client_pb/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// MatchReq 匹配请求
type MatchReq struct {
	Reserve          *uint32                        `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	GameId           *uint32                        `protobuf:"varint,2,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	LevelId          *uint32                        `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	Location         []*common.GeographicalLocation `protobuf:"bytes,4,rep,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *MatchReq) Reset()                    { *m = MatchReq{} }
func (m *MatchReq) String() string            { return proto.CompactTextString(m) }
func (*MatchReq) ProtoMessage()               {}
func (*MatchReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MatchReq) GetReserve() uint32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

func (m *MatchReq) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *MatchReq) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *MatchReq) GetLocation() []*common.GeographicalLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

// MatchRsp 匹配应答
type MatchRsp struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	GameId           *uint32 `protobuf:"varint,3,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	LevelId          *uint32 `protobuf:"varint,4,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchRsp) Reset()                    { *m = MatchRsp{} }
func (m *MatchRsp) String() string            { return proto.CompactTextString(m) }
func (*MatchRsp) ProtoMessage()               {}
func (*MatchRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MatchRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *MatchRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func (m *MatchRsp) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *MatchRsp) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

// DeskPlayerInfo 桌子玩家数据
type DeskPlayerInfo struct {
	PlayerId         *uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Coin             *int64  `protobuf:"varint,3,opt,name=coin" json:"coin,omitempty"`
	Seat             *int32  `protobuf:"varint,4,opt,name=seat" json:"seat,omitempty"`
	Gender           *uint32 `protobuf:"varint,5,opt,name=gender" json:"gender,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeskPlayerInfo) Reset()                    { *m = DeskPlayerInfo{} }
func (m *DeskPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*DeskPlayerInfo) ProtoMessage()               {}
func (*DeskPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *DeskPlayerInfo) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *DeskPlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeskPlayerInfo) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *DeskPlayerInfo) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *DeskPlayerInfo) GetGender() uint32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

// 匹配成功时的创建桌子消息
type MatchSucCreateDeskNtf struct {
	Players          []*DeskPlayerInfo `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	GameId           *uint32           `protobuf:"varint,2,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	LevelId          *uint32           `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *MatchSucCreateDeskNtf) Reset()                    { *m = MatchSucCreateDeskNtf{} }
func (m *MatchSucCreateDeskNtf) String() string            { return proto.CompactTextString(m) }
func (*MatchSucCreateDeskNtf) ProtoMessage()               {}
func (*MatchSucCreateDeskNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *MatchSucCreateDeskNtf) GetPlayers() []*DeskPlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *MatchSucCreateDeskNtf) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *MatchSucCreateDeskNtf) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

// MatchDeskContinueReq 续局请求
type MatchDeskContinueReq struct {
	GameId           *uint32                        `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	Location         []*common.GeographicalLocation `protobuf:"bytes,2,rep,name=location" json:"location,omitempty"`
	Cancel           *bool                          `protobuf:"varint,3,opt,name=cancel" json:"cancel,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *MatchDeskContinueReq) Reset()                    { *m = MatchDeskContinueReq{} }
func (m *MatchDeskContinueReq) String() string            { return proto.CompactTextString(m) }
func (*MatchDeskContinueReq) ProtoMessage()               {}
func (*MatchDeskContinueReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *MatchDeskContinueReq) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *MatchDeskContinueReq) GetLocation() []*common.GeographicalLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *MatchDeskContinueReq) GetCancel() bool {
	if m != nil && m.Cancel != nil {
		return *m.Cancel
	}
	return false
}

// MatchDeskContinueRsp 续局应答
type MatchDeskContinueRsp struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchDeskContinueRsp) Reset()                    { *m = MatchDeskContinueRsp{} }
func (m *MatchDeskContinueRsp) String() string            { return proto.CompactTextString(m) }
func (*MatchDeskContinueRsp) ProtoMessage()               {}
func (*MatchDeskContinueRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *MatchDeskContinueRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *MatchDeskContinueRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

// MatchContinueDeskDimissNtf 续局牌桌解散通知
type MatchContinueDeskDimissNtf struct {
	Reserve          *int32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MatchContinueDeskDimissNtf) Reset()                    { *m = MatchContinueDeskDimissNtf{} }
func (m *MatchContinueDeskDimissNtf) String() string            { return proto.CompactTextString(m) }
func (*MatchContinueDeskDimissNtf) ProtoMessage()               {}
func (*MatchContinueDeskDimissNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *MatchContinueDeskDimissNtf) GetReserve() int32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

// CancelMatchReq 取消匹配请求
type CancelMatchReq struct {
	Reserve          *uint32 `protobuf:"varint,1,opt,name=reserve" json:"reserve,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CancelMatchReq) Reset()                    { *m = CancelMatchReq{} }
func (m *CancelMatchReq) String() string            { return proto.CompactTextString(m) }
func (*CancelMatchReq) ProtoMessage()               {}
func (*CancelMatchReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *CancelMatchReq) GetReserve() uint32 {
	if m != nil && m.Reserve != nil {
		return *m.Reserve
	}
	return 0
}

// CancelMatchRsp 取消匹配应答
type CancelMatchRsp struct {
	ErrCode          *int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrDesc          *string `protobuf:"bytes,2,opt,name=err_desc,json=errDesc" json:"err_desc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CancelMatchRsp) Reset()                    { *m = CancelMatchRsp{} }
func (m *CancelMatchRsp) String() string            { return proto.CompactTextString(m) }
func (*CancelMatchRsp) ProtoMessage()               {}
func (*CancelMatchRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *CancelMatchRsp) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *CancelMatchRsp) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func init() {
	proto.RegisterType((*MatchReq)(nil), "match.MatchReq")
	proto.RegisterType((*MatchRsp)(nil), "match.MatchRsp")
	proto.RegisterType((*DeskPlayerInfo)(nil), "match.DeskPlayerInfo")
	proto.RegisterType((*MatchSucCreateDeskNtf)(nil), "match.MatchSucCreateDeskNtf")
	proto.RegisterType((*MatchDeskContinueReq)(nil), "match.MatchDeskContinueReq")
	proto.RegisterType((*MatchDeskContinueRsp)(nil), "match.MatchDeskContinueRsp")
	proto.RegisterType((*MatchContinueDeskDimissNtf)(nil), "match.MatchContinueDeskDimissNtf")
	proto.RegisterType((*CancelMatchReq)(nil), "match.CancelMatchReq")
	proto.RegisterType((*CancelMatchRsp)(nil), "match.CancelMatchRsp")
}

func init() { proto.RegisterFile("match.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x86, 0x95, 0x26, 0x69, 0x52, 0x17, 0x7a, 0xb0, 0x58, 0x1a, 0x0a, 0x87, 0xca, 0xa7, 0x8a,
	0xc3, 0xae, 0xc4, 0x01, 0x71, 0x26, 0x2b, 0x50, 0xa4, 0x82, 0x90, 0xb9, 0x71, 0x59, 0x19, 0x7b,
	0xba, 0xb5, 0x48, 0xec, 0x60, 0xbb, 0x2b, 0x21, 0x71, 0xe1, 0x15, 0x78, 0x62, 0xe4, 0x49, 0x52,
	0x6d, 0x10, 0x08, 0xb1, 0x37, 0xff, 0x33, 0xb3, 0xf3, 0x7f, 0x3b, 0x33, 0x21, 0xa7, 0x9d, 0x08,
	0xf2, 0x76, 0xd9, 0x3b, 0x1b, 0x2c, 0xcd, 0x51, 0x5c, 0x3c, 0x90, 0xb6, 0xeb, 0xac, 0x19, 0x82,
	0xec, 0x67, 0x42, 0xca, 0x77, 0x31, 0xce, 0xe1, 0x2b, 0xad, 0x48, 0xe1, 0xc0, 0x83, 0xdb, 0x41,
	0x95, 0x5c, 0x26, 0x57, 0x0f, 0xf9, 0x24, 0xe9, 0x39, 0x29, 0xb6, 0xa2, 0x83, 0x8d, 0x56, 0xd5,
	0x11, 0x66, 0x8e, 0xa3, 0x6c, 0x14, 0x7d, 0x42, 0xca, 0x16, 0x76, 0xd0, 0xc6, 0x4c, 0x3a, 0xfc,
	0x06, 0x75, 0xa3, 0xe8, 0x2b, 0x52, 0xb6, 0x56, 0x8a, 0xa0, 0xad, 0xa9, 0xb2, 0xcb, 0xf4, 0xea,
	0xf4, 0xc5, 0xb3, 0xe5, 0xe8, 0xfd, 0x16, 0xec, 0xd6, 0x89, 0xfe, 0x56, 0x4b, 0xd1, 0x5e, 0x8f,
	0x35, 0xfc, 0xbe, 0x9a, 0x85, 0x89, 0xc9, 0xf7, 0xd1, 0x00, 0x9c, 0xdb, 0x48, 0xab, 0x06, 0xa8,
	0x9c, 0x17, 0xe0, 0x5c, 0x6d, 0x15, 0x4c, 0x29, 0x05, 0x5e, 0x22, 0xd5, 0x09, 0xa6, 0xd6, 0xe0,
	0xe5, 0x3e, 0x6f, 0xfa, 0x57, 0xde, 0x6c, 0xc6, 0xcb, 0x7e, 0x24, 0xe4, 0x6c, 0x0d, 0xfe, 0xcb,
	0x87, 0x56, 0x7c, 0x03, 0xd7, 0x98, 0x1b, 0x4b, 0x9f, 0x92, 0x93, 0x1e, 0x55, 0x2c, 0x8f, 0xee,
	0x19, 0x2f, 0x87, 0x40, 0xa3, 0x28, 0x25, 0x99, 0x11, 0x1d, 0x8c, 0xd6, 0xf8, 0x8e, 0x31, 0x69,
	0xb5, 0x41, 0xd3, 0x94, 0xe3, 0x3b, 0xc6, 0x3c, 0x88, 0x80, 0x76, 0x39, 0xc7, 0x37, 0x7d, 0x4c,
	0x8e, 0xb7, 0x60, 0x14, 0xb8, 0x2a, 0x1f, 0xf1, 0x50, 0xb1, 0xef, 0x64, 0x81, 0xff, 0xfc, 0xe3,
	0x9d, 0xac, 0x1d, 0x88, 0x00, 0x11, 0xe8, 0x7d, 0xb8, 0xa1, 0x2b, 0x52, 0x0c, 0xc6, 0xbe, 0x4a,
	0x70, 0x96, 0x8b, 0xe5, 0xb0, 0xdb, 0x39, 0x31, 0x9f, 0xaa, 0x0e, 0xd9, 0x58, 0x9c, 0xc0, 0x23,
	0xb4, 0x8f, 0x4d, 0x6b, 0x6b, 0x82, 0x36, 0x77, 0x10, 0x0f, 0x63, 0xaf, 0x59, 0x32, 0x6b, 0xb6,
	0xbf, 0xe3, 0xa3, 0xff, 0xd9, 0x71, 0x9c, 0x80, 0x14, 0x46, 0x42, 0x8b, 0x10, 0x25, 0x1f, 0x15,
	0xbb, 0xfe, 0x13, 0xc2, 0xa1, 0x77, 0xc0, 0x5e, 0x92, 0x0b, 0xec, 0x36, 0x75, 0x8a, 0x5d, 0xd7,
	0xba, 0xd3, 0xde, 0xc7, 0xa1, 0xfe, 0x76, 0xef, 0xf9, 0xfd, 0xbd, 0xb3, 0xe7, 0xe4, 0xac, 0x46,
	0x9e, 0x7f, 0x7f, 0x1b, 0xec, 0xcd, 0xbc, 0xf6, 0x50, 0xd6, 0xd7, 0xe7, 0x9f, 0x16, 0x3e, 0xc0,
	0x0e, 0x56, 0xb2, 0xd5, 0x60, 0xc2, 0xa6, 0xff, 0xbc, 0xc2, 0x15, 0xff, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0x67, 0x67, 0x14, 0xdf, 0xc6, 0x03, 0x00, 0x00,
}
