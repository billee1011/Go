// Automatically generated by MockGen. DO NOT EDIT!
// Source: flow.go

package interfaces

import (
	gomock "github.com/golang/mock/gomock"
	majong "steve/server_pb/majong"
)

// Mock of MajongFlow interface
type MockMajongFlow struct {
	ctrl     *gomock.Controller
	recorder *_MockMajongFlowRecorder
}

// Recorder for MockMajongFlow (not exported)
type _MockMajongFlowRecorder struct {
	mock *MockMajongFlow
}

func NewMockMajongFlow(ctrl *gomock.Controller) *MockMajongFlow {
	mock := &MockMajongFlow{ctrl: ctrl}
	mock.recorder = &_MockMajongFlowRecorder{mock}
	return mock
}

func (_m *MockMajongFlow) EXPECT() *_MockMajongFlowRecorder {
	return _m.recorder
}

func (_m *MockMajongFlow) GetMajongContext() *majong.MajongContext {
	ret := _m.ctrl.Call(_m, "GetMajongContext")
	ret0, _ := ret[0].(*majong.MajongContext)
	return ret0
}

func (_mr *_MockMajongFlowRecorder) GetMajongContext() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMajongContext")
}

func (_m *MockMajongFlow) SetAutoEvent(autoEvent majong.AutoEvent) {
	_m.ctrl.Call(_m, "SetAutoEvent", autoEvent)
}

func (_mr *_MockMajongFlowRecorder) SetAutoEvent(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetAutoEvent", arg0)
}

func (_m *MockMajongFlow) GetAutoEvent() *majong.AutoEvent {
	ret := _m.ctrl.Call(_m, "GetAutoEvent")
	ret0, _ := ret[0].(*majong.AutoEvent)
	return ret0
}

func (_mr *_MockMajongFlowRecorder) GetAutoEvent() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAutoEvent")
}

func (_m *MockMajongFlow) ProcessEvent(eventID majong.EventID, eventContext []byte) error {
	ret := _m.ctrl.Call(_m, "ProcessEvent", eventID, eventContext)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockMajongFlowRecorder) ProcessEvent(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ProcessEvent", arg0, arg1)
}

func (_m *MockMajongFlow) GetSettler(settlerType SettlerType) Settler {
	ret := _m.ctrl.Call(_m, "GetSettler", settlerType)
	ret0, _ := ret[0].(Settler)
	return ret0
}

func (_mr *_MockMajongFlowRecorder) GetSettler(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSettler", arg0)
}

func (_m *MockMajongFlow) PushMessages(playerIDs []uint64, msgs ...ToClientMessage) {
	_s := []interface{}{playerIDs}
	for _, _x := range msgs {
		_s = append(_s, _x)
	}
	_m.ctrl.Call(_m, "PushMessages", _s...)
}

func (_mr *_MockMajongFlowRecorder) PushMessages(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PushMessages", _s...)
}

func (_m *MockMajongFlow) GetMessages() []majong.ReplyClientMessage {
	ret := _m.ctrl.Call(_m, "GetMessages")
	ret0, _ := ret[0].([]majong.ReplyClientMessage)
	return ret0
}

func (_mr *_MockMajongFlowRecorder) GetMessages() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMessages")
}
