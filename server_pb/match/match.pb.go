// Code generated by protoc-gen-go. DO NOT EDIT.
// source: match.proto

package match

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ContinuePlayer 牌桌续局玩家
type ContinuePlayer struct {
	PlayerId             uint64   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Seat                 int32    `protobuf:"varint,2,opt,name=seat,proto3" json:"seat,omitempty"`
	Win                  bool     `protobuf:"varint,3,opt,name=win,proto3" json:"win,omitempty"`
	RobotLevel           int32    `protobuf:"varint,4,opt,name=robot_level,json=robotLevel,proto3" json:"robot_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContinuePlayer) Reset()         { *m = ContinuePlayer{} }
func (m *ContinuePlayer) String() string { return proto.CompactTextString(m) }
func (*ContinuePlayer) ProtoMessage()    {}
func (*ContinuePlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_match_6efc2c2eccbfdaad, []int{0}
}
func (m *ContinuePlayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinuePlayer.Unmarshal(m, b)
}
func (m *ContinuePlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinuePlayer.Marshal(b, m, deterministic)
}
func (dst *ContinuePlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinuePlayer.Merge(dst, src)
}
func (m *ContinuePlayer) XXX_Size() int {
	return xxx_messageInfo_ContinuePlayer.Size(m)
}
func (m *ContinuePlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinuePlayer.DiscardUnknown(m)
}

var xxx_messageInfo_ContinuePlayer proto.InternalMessageInfo

func (m *ContinuePlayer) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ContinuePlayer) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *ContinuePlayer) GetWin() bool {
	if m != nil {
		return m.Win
	}
	return false
}

func (m *ContinuePlayer) GetRobotLevel() int32 {
	if m != nil {
		return m.RobotLevel
	}
	return 0
}

// AddContinueDeskReq 添加续局牌桌请求
type AddContinueDeskReq struct {
	Players              []*ContinuePlayer `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	GameId               int32             `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	FixBanker            bool              `protobuf:"varint,3,opt,name=fix_banker,json=fixBanker,proto3" json:"fix_banker,omitempty"`
	BankerSeat           int32             `protobuf:"varint,4,opt,name=banker_seat,json=bankerSeat,proto3" json:"banker_seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddContinueDeskReq) Reset()         { *m = AddContinueDeskReq{} }
func (m *AddContinueDeskReq) String() string { return proto.CompactTextString(m) }
func (*AddContinueDeskReq) ProtoMessage()    {}
func (*AddContinueDeskReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_match_6efc2c2eccbfdaad, []int{1}
}
func (m *AddContinueDeskReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddContinueDeskReq.Unmarshal(m, b)
}
func (m *AddContinueDeskReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddContinueDeskReq.Marshal(b, m, deterministic)
}
func (dst *AddContinueDeskReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddContinueDeskReq.Merge(dst, src)
}
func (m *AddContinueDeskReq) XXX_Size() int {
	return xxx_messageInfo_AddContinueDeskReq.Size(m)
}
func (m *AddContinueDeskReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddContinueDeskReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddContinueDeskReq proto.InternalMessageInfo

func (m *AddContinueDeskReq) GetPlayers() []*ContinuePlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *AddContinueDeskReq) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *AddContinueDeskReq) GetFixBanker() bool {
	if m != nil {
		return m.FixBanker
	}
	return false
}

func (m *AddContinueDeskReq) GetBankerSeat() int32 {
	if m != nil {
		return m.BankerSeat
	}
	return 0
}

// AddContinueDeskRsp 添加续局牌桌应答
type AddContinueDeskRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddContinueDeskRsp) Reset()         { *m = AddContinueDeskRsp{} }
func (m *AddContinueDeskRsp) String() string { return proto.CompactTextString(m) }
func (*AddContinueDeskRsp) ProtoMessage()    {}
func (*AddContinueDeskRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_match_6efc2c2eccbfdaad, []int{2}
}
func (m *AddContinueDeskRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddContinueDeskRsp.Unmarshal(m, b)
}
func (m *AddContinueDeskRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddContinueDeskRsp.Marshal(b, m, deterministic)
}
func (dst *AddContinueDeskRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddContinueDeskRsp.Merge(dst, src)
}
func (m *AddContinueDeskRsp) XXX_Size() int {
	return xxx_messageInfo_AddContinueDeskRsp.Size(m)
}
func (m *AddContinueDeskRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddContinueDeskRsp.DiscardUnknown(m)
}

var xxx_messageInfo_AddContinueDeskRsp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ContinuePlayer)(nil), "match.ContinuePlayer")
	proto.RegisterType((*AddContinueDeskReq)(nil), "match.AddContinueDeskReq")
	proto.RegisterType((*AddContinueDeskRsp)(nil), "match.AddContinueDeskRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MatchClient is the client API for Match service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatchClient interface {
	AddContinueDesk(ctx context.Context, in *AddContinueDeskReq, opts ...grpc.CallOption) (*AddContinueDeskRsp, error)
}

type matchClient struct {
	cc *grpc.ClientConn
}

func NewMatchClient(cc *grpc.ClientConn) MatchClient {
	return &matchClient{cc}
}

func (c *matchClient) AddContinueDesk(ctx context.Context, in *AddContinueDeskReq, opts ...grpc.CallOption) (*AddContinueDeskRsp, error) {
	out := new(AddContinueDeskRsp)
	err := c.cc.Invoke(ctx, "/match.Match/AddContinueDesk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MatchServer is the server API for Match service.
type MatchServer interface {
	AddContinueDesk(context.Context, *AddContinueDeskReq) (*AddContinueDeskRsp, error)
}

func RegisterMatchServer(s *grpc.Server, srv MatchServer) {
	s.RegisterService(&_Match_serviceDesc, srv)
}

func _Match_AddContinueDesk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddContinueDeskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchServer).AddContinueDesk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/match.Match/AddContinueDesk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchServer).AddContinueDesk(ctx, req.(*AddContinueDeskReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Match_serviceDesc = grpc.ServiceDesc{
	ServiceName: "match.Match",
	HandlerType: (*MatchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddContinueDesk",
			Handler:    _Match_AddContinueDesk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "match.proto",
}

func init() { proto.RegisterFile("match.proto", fileDescriptor_match_6efc2c2eccbfdaad) }

var fileDescriptor_match_6efc2c2eccbfdaad = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0xdb, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x8d, 0x49, 0x7a, 0x98, 0x80, 0xca, 0xa0, 0x18, 0x15, 0x51, 0x72, 0xd5, 0xab, 0x0a,
	0xf5, 0x09, 0x3c, 0xdc, 0x14, 0x14, 0x64, 0x7d, 0x80, 0xb0, 0x31, 0xa3, 0x86, 0xa6, 0xd9, 0x98,
	0x5d, 0x4f, 0x2f, 0xe3, 0xb3, 0xba, 0x3b, 0x9b, 0x5e, 0x68, 0xe9, 0xdd, 0xec, 0xf7, 0x0f, 0xfc,
	0xdf, 0xb0, 0x90, 0x2c, 0xa5, 0x79, 0x7a, 0x9d, 0xb6, 0x9d, 0x32, 0x0a, 0x63, 0x7e, 0x64, 0x06,
	0x76, 0x6e, 0x54, 0x63, 0xaa, 0xe6, 0x9d, 0x1e, 0x6a, 0xf9, 0x4d, 0x1d, 0x9e, 0xc0, 0xb8, 0xe5,
	0x29, 0xaf, 0xca, 0x34, 0x38, 0x0f, 0x26, 0x91, 0x18, 0x79, 0x30, 0x2f, 0x11, 0x21, 0xd2, 0x24,
	0x4d, 0xba, 0x6d, 0x79, 0x2c, 0x78, 0xc6, 0x3d, 0x08, 0x3f, 0xab, 0x26, 0x0d, 0x2d, 0x1a, 0x09,
	0x37, 0xe2, 0x19, 0x24, 0x9d, 0x2a, 0x94, 0xc9, 0x6b, 0xfa, 0xa0, 0x3a, 0x8d, 0x78, 0x19, 0x18,
	0xdd, 0x39, 0x92, 0xfd, 0x04, 0x80, 0x57, 0x65, 0xb9, 0x6a, 0xbe, 0x25, 0xbd, 0x10, 0xf4, 0x86,
	0x17, 0x30, 0xf4, 0x4d, 0xda, 0x16, 0x87, 0x93, 0x64, 0x76, 0x30, 0xf5, 0xca, 0x7f, 0x15, 0xc5,
	0x6a, 0x0b, 0x0f, 0x61, 0xf8, 0x22, 0x97, 0xe4, 0x4c, 0xbd, 0xd1, 0xc0, 0x3d, 0xad, 0xe7, 0x29,
	0xc0, 0x73, 0xf5, 0x95, 0x17, 0xb2, 0x59, 0x50, 0xd7, 0xab, 0x8d, 0x2d, 0xb9, 0x66, 0xe0, 0x04,
	0x7d, 0x94, 0xf3, 0x35, 0xbd, 0xa0, 0x47, 0x8f, 0x96, 0x64, 0xfb, 0xeb, 0x7e, 0xba, 0x9d, 0x09,
	0x88, 0xef, 0x9d, 0x0f, 0xce, 0x61, 0xf7, 0x5f, 0x8c, 0x47, 0xbd, 0xea, 0xfa, 0x59, 0xc7, 0x9b,
	0x22, 0xdd, 0x66, 0x5b, 0xc5, 0x80, 0xbf, 0xe3, 0xf2, 0x37, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x30,
	0xa9, 0xd6, 0x9d, 0x01, 0x00, 0x00,
}
