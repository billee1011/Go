// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enum.proto

/*
Package robot is a generated protocol buffer package.

It is generated from these files:
	enum.proto
	robot.proto

It has these top-level messages:
	GameConfig
	GameWinRate
	RobotPlayerInfo
	WinRateRange
	CoinsRange
	GetLeisureRobotInfoReq
	GetLeisureRobotInfoRsp
	SetRobotPlayerStateReq
	SetRobotPlayerStateRsp
	UpdataRobotGameWinRateReq
	UpdataRobotGameWinRateRsp
	IsRobotPlayerReq
	IsRobotPlayerRsp
*/
package robot

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ErrCode 错误码
type ErrCode int32

const (
	ErrCode_EC_SUCCESS  ErrCode = 0
	ErrCode_EC_FAIL     ErrCode = 1
	ErrCode_EC_Args     ErrCode = 2
	ErrCode_EC_EMPTY    ErrCode = 3
	ErrCode_EC_NOTROBOT ErrCode = 4
)

var ErrCode_name = map[int32]string{
	0: "EC_SUCCESS",
	1: "EC_FAIL",
	2: "EC_Args",
	3: "EC_EMPTY",
	4: "EC_NOTROBOT",
}
var ErrCode_value = map[string]int32{
	"EC_SUCCESS":  0,
	"EC_FAIL":     1,
	"EC_Args":     2,
	"EC_EMPTY":    3,
	"EC_NOTROBOT": 4,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}
func (ErrCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// RobotPlayerState 机器人玩家状态
type RobotPlayerState int32

const (
	RobotPlayerState_RPS_IDIE     RobotPlayerState = 0
	RobotPlayerState_RPS_MATCHING RobotPlayerState = 1
	RobotPlayerState_RPS_GAMEING  RobotPlayerState = 2
)

var RobotPlayerState_name = map[int32]string{
	0: "RPS_IDIE",
	1: "RPS_MATCHING",
	2: "RPS_GAMEING",
}
var RobotPlayerState_value = map[string]int32{
	"RPS_IDIE":     0,
	"RPS_MATCHING": 1,
	"RPS_GAMEING":  2,
}

func (x RobotPlayerState) String() string {
	return proto.EnumName(RobotPlayerState_name, int32(x))
}
func (RobotPlayerState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// ServerType 服务类型
type ServerType int32

const (
	ServerType_ST_GATE  ServerType = 0
	ServerType_ST_MATCH ServerType = 1
	ServerType_ST_ROOM  ServerType = 2
)

var ServerType_name = map[int32]string{
	0: "ST_GATE",
	1: "ST_MATCH",
	2: "ST_ROOM",
}
var ServerType_value = map[string]int32{
	"ST_GATE":  0,
	"ST_MATCH": 1,
	"ST_ROOM":  2,
}

func (x ServerType) String() string {
	return proto.EnumName(ServerType_name, int32(x))
}
func (ServerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterEnum("robot.ErrCode", ErrCode_name, ErrCode_value)
	proto.RegisterEnum("robot.RobotPlayerState", RobotPlayerState_name, RobotPlayerState_value)
	proto.RegisterEnum("robot.ServerType", ServerType_name, ServerType_value)
}

func init() { proto.RegisterFile("enum.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8f, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0xdb, 0xf0, 0xd3, 0x6a, 0x1a, 0xc1, 0xc8, 0xc7, 0xc8, 0x82, 0x0d, 0x5c, 0xc0, 0x0c,
	0x43, 0x88, 0x44, 0xea, 0xc8, 0x33, 0x2c, 0x58, 0x59, 0xad, 0xb0, 0xd8, 0x00, 0xae, 0x8c, 0x41,
	0xea, 0xed, 0x91, 0x49, 0x97, 0xef, 0x49, 0xdf, 0x37, 0xf3, 0x00, 0xe2, 0xd7, 0xcf, 0xe7, 0xcd,
	0x21, 0xa7, 0x92, 0xcc, 0x45, 0x4e, 0xfb, 0x54, 0x3a, 0x0f, 0x2b, 0xce, 0x99, 0xd2, 0x5b, 0x34,
	0x57, 0x00, 0x4c, 0x41, 0x5e, 0x88, 0x58, 0x04, 0x17, 0x66, 0x03, 0x2b, 0xa6, 0xf0, 0x68, 0x87,
	0x67, 0x5c, 0x9e, 0x82, 0xcd, 0xef, 0xdf, 0xd8, 0x98, 0x16, 0xd6, 0x4c, 0x81, 0xc7, 0x49, 0x5f,
	0xf1, 0xcc, 0x5c, 0xc3, 0x86, 0x29, 0x6c, 0x9d, 0x7a, 0x77, 0xef, 0x14, 0xcf, 0x3b, 0x02, 0xf4,
	0x55, 0x3e, 0x7d, 0xec, 0x8e, 0x31, 0x4b, 0xd9, 0x95, 0x58, 0x11, 0x3f, 0x49, 0x18, 0x1e, 0x06,
	0xc6, 0x85, 0x41, 0x68, 0x6b, 0x1a, 0xad, 0xd2, 0xd3, 0xb0, 0xed, 0x71, 0x59, 0x25, 0xb5, 0xe9,
	0xed, 0xc8, 0xb5, 0x68, 0xba, 0x3b, 0x00, 0x89, 0xf9, 0x37, 0x66, 0x3d, 0x1e, 0x62, 0x3d, 0x2f,
	0x1a, 0x7a, 0xab, 0x95, 0x6e, 0x61, 0x2d, 0x3a, 0xc3, 0xf3, 0x67, 0xa2, 0xc1, 0x3b, 0x37, 0x62,
	0xb3, 0xbf, 0xfc, 0x1f, 0x77, 0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0xbc, 0xcc, 0xbe, 0x2c, 0xea,
	0x00, 0x00, 0x00,
}
