// Code generated by protoc-gen-go. DO NOT EDIT.
// source: robot.proto

/*
Package robot is a generated protocol buffer package.

It is generated from these files:
	robot.proto

It has these top-level messages:
	GameWinRate
	RobotPlayerInfo
	WinRateRange
	CoinsRange
	GetRobotPlayerIDReq
	GetRobotPlayerIDRsp
	SetRobotPlayerStateReq
	SetRobotPlayerStateRsp
*/
package robot

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// RobotPlayerState 机器人玩家状态
type RobotPlayerState int32

const (
	RobotPlayerState_RPS_IDIE     RobotPlayerState = 0
	RobotPlayerState_RPS_MATCHING RobotPlayerState = 1
	RobotPlayerState_RPS_GAMEING  RobotPlayerState = 2
)

var RobotPlayerState_name = map[int32]string{
	0: "RPS_IDIE",
	1: "RPS_MATCHING",
	2: "RPS_GAMEING",
}
var RobotPlayerState_value = map[string]int32{
	"RPS_IDIE":     0,
	"RPS_MATCHING": 1,
	"RPS_GAMEING":  2,
}

func (x RobotPlayerState) String() string {
	return proto.EnumName(RobotPlayerState_name, int32(x))
}
func (RobotPlayerState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// GameWinRate 游戏对应的胜率
type GameWinRate struct {
	GameId  int32 `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	WinRate int32 `protobuf:"varint,2,opt,name=win_rate,json=winRate" json:"win_rate,omitempty"`
}

func (m *GameWinRate) Reset()                    { *m = GameWinRate{} }
func (m *GameWinRate) String() string            { return proto.CompactTextString(m) }
func (*GameWinRate) ProtoMessage()               {}
func (*GameWinRate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GameWinRate) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GameWinRate) GetWinRate() int32 {
	if m != nil {
		return m.WinRate
	}
	return 0
}

// RobotPlayerInfo 机器人I玩家详情
type RobotPlayerInfo struct {
	PlayerId    uint64           `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	NickName    string           `protobuf:"bytes,2,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	HeadImage   string           `protobuf:"bytes,3,opt,name=head_image,json=headImage" json:"head_image,omitempty"`
	Coin        uint64           `protobuf:"varint,4,opt,name=coin" json:"coin,omitempty"`
	State       RobotPlayerState `protobuf:"varint,5,opt,name=state,enum=robot.RobotPlayerState" json:"state,omitempty"`
	GameWinRate *GameWinRate     `protobuf:"bytes,6,opt,name=game_win_rate,json=gameWinRate" json:"game_win_rate,omitempty"`
}

func (m *RobotPlayerInfo) Reset()                    { *m = RobotPlayerInfo{} }
func (m *RobotPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*RobotPlayerInfo) ProtoMessage()               {}
func (*RobotPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RobotPlayerInfo) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RobotPlayerInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *RobotPlayerInfo) GetHeadImage() string {
	if m != nil {
		return m.HeadImage
	}
	return ""
}

func (m *RobotPlayerInfo) GetCoin() uint64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *RobotPlayerInfo) GetState() RobotPlayerState {
	if m != nil {
		return m.State
	}
	return RobotPlayerState_RPS_IDIE
}

func (m *RobotPlayerInfo) GetGameWinRate() *GameWinRate {
	if m != nil {
		return m.GameWinRate
	}
	return nil
}

// WinRateRange 胜率范围
type WinRateRange struct {
	High int32 `protobuf:"varint,1,opt,name=high" json:"high,omitempty"`
	Low  int32 `protobuf:"varint,2,opt,name=low" json:"low,omitempty"`
}

func (m *WinRateRange) Reset()                    { *m = WinRateRange{} }
func (m *WinRateRange) String() string            { return proto.CompactTextString(m) }
func (*WinRateRange) ProtoMessage()               {}
func (*WinRateRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *WinRateRange) GetHigh() int32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *WinRateRange) GetLow() int32 {
	if m != nil {
		return m.Low
	}
	return 0
}

// CoinsRange 金币范围
type CoinsRange struct {
	High int32 `protobuf:"varint,1,opt,name=high" json:"high,omitempty"`
	Low  int32 `protobuf:"varint,2,opt,name=low" json:"low,omitempty"`
}

func (m *CoinsRange) Reset()                    { *m = CoinsRange{} }
func (m *CoinsRange) String() string            { return proto.CompactTextString(m) }
func (*CoinsRange) ProtoMessage()               {}
func (*CoinsRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CoinsRange) GetHigh() int32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *CoinsRange) GetLow() int32 {
	if m != nil {
		return m.Low
	}
	return 0
}

// GetRobotPlayerIDReq 获取机器人ID请求
type GetRobotPlayerIDReq struct {
	GameId       int32         `protobuf:"varint,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	WinRateRange *WinRateRange `protobuf:"bytes,2,opt,name=win_rate_range,json=winRateRange" json:"win_rate_range,omitempty"`
	CoinsRange   *CoinsRange   `protobuf:"bytes,3,opt,name=coins_range,json=coinsRange" json:"coins_range,omitempty"`
}

func (m *GetRobotPlayerIDReq) Reset()                    { *m = GetRobotPlayerIDReq{} }
func (m *GetRobotPlayerIDReq) String() string            { return proto.CompactTextString(m) }
func (*GetRobotPlayerIDReq) ProtoMessage()               {}
func (*GetRobotPlayerIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetRobotPlayerIDReq) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GetRobotPlayerIDReq) GetWinRateRange() *WinRateRange {
	if m != nil {
		return m.WinRateRange
	}
	return nil
}

func (m *GetRobotPlayerIDReq) GetCoinsRange() *CoinsRange {
	if m != nil {
		return m.CoinsRange
	}
	return nil
}

// GetRobotPlayerIDRsp 机器人ID响应
type GetRobotPlayerIDRsp struct {
	RobotPlayerId uint64 `protobuf:"varint,1,opt,name=robot_player_id,json=robotPlayerId" json:"robot_player_id,omitempty"`
}

func (m *GetRobotPlayerIDRsp) Reset()                    { *m = GetRobotPlayerIDRsp{} }
func (m *GetRobotPlayerIDRsp) String() string            { return proto.CompactTextString(m) }
func (*GetRobotPlayerIDRsp) ProtoMessage()               {}
func (*GetRobotPlayerIDRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetRobotPlayerIDRsp) GetRobotPlayerId() uint64 {
	if m != nil {
		return m.RobotPlayerId
	}
	return 0
}

// SetRobotPlayerStateReq 設置机器人玩家状态請求
type SetRobotPlayerStateReq struct {
	RobotPlayerId uint64           `protobuf:"varint,1,opt,name=robot_player_id,json=robotPlayerId" json:"robot_player_id,omitempty"`
	State         RobotPlayerState `protobuf:"varint,2,opt,name=state,enum=robot.RobotPlayerState" json:"state,omitempty"`
}

func (m *SetRobotPlayerStateReq) Reset()                    { *m = SetRobotPlayerStateReq{} }
func (m *SetRobotPlayerStateReq) String() string            { return proto.CompactTextString(m) }
func (*SetRobotPlayerStateReq) ProtoMessage()               {}
func (*SetRobotPlayerStateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SetRobotPlayerStateReq) GetRobotPlayerId() uint64 {
	if m != nil {
		return m.RobotPlayerId
	}
	return 0
}

func (m *SetRobotPlayerStateReq) GetState() RobotPlayerState {
	if m != nil {
		return m.State
	}
	return RobotPlayerState_RPS_IDIE
}

// SetRobotPlayerStateRsp 設置机器人玩家状态响应
type SetRobotPlayerStateRsp struct {
	Result bool `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *SetRobotPlayerStateRsp) Reset()                    { *m = SetRobotPlayerStateRsp{} }
func (m *SetRobotPlayerStateRsp) String() string            { return proto.CompactTextString(m) }
func (*SetRobotPlayerStateRsp) ProtoMessage()               {}
func (*SetRobotPlayerStateRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SetRobotPlayerStateRsp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*GameWinRate)(nil), "robot.GameWinRate")
	proto.RegisterType((*RobotPlayerInfo)(nil), "robot.RobotPlayerInfo")
	proto.RegisterType((*WinRateRange)(nil), "robot.WinRateRange")
	proto.RegisterType((*CoinsRange)(nil), "robot.CoinsRange")
	proto.RegisterType((*GetRobotPlayerIDReq)(nil), "robot.GetRobotPlayerIDReq")
	proto.RegisterType((*GetRobotPlayerIDRsp)(nil), "robot.GetRobotPlayerIDRsp")
	proto.RegisterType((*SetRobotPlayerStateReq)(nil), "robot.SetRobotPlayerStateReq")
	proto.RegisterType((*SetRobotPlayerStateRsp)(nil), "robot.SetRobotPlayerStateRsp")
	proto.RegisterEnum("robot.RobotPlayerState", RobotPlayerState_name, RobotPlayerState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RobotService service

type RobotServiceClient interface {
	GetRobotPlayerIDByInfo(ctx context.Context, in *GetRobotPlayerIDReq, opts ...grpc.CallOption) (*GetRobotPlayerIDRsp, error)
	SetRobotPlayerState(ctx context.Context, in *SetRobotPlayerStateReq, opts ...grpc.CallOption) (*SetRobotPlayerStateRsp, error)
}

type robotServiceClient struct {
	cc *grpc.ClientConn
}

func NewRobotServiceClient(cc *grpc.ClientConn) RobotServiceClient {
	return &robotServiceClient{cc}
}

func (c *robotServiceClient) GetRobotPlayerIDByInfo(ctx context.Context, in *GetRobotPlayerIDReq, opts ...grpc.CallOption) (*GetRobotPlayerIDRsp, error) {
	out := new(GetRobotPlayerIDRsp)
	err := grpc.Invoke(ctx, "/robot.RobotService/GetRobotPlayerIDByInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *robotServiceClient) SetRobotPlayerState(ctx context.Context, in *SetRobotPlayerStateReq, opts ...grpc.CallOption) (*SetRobotPlayerStateRsp, error) {
	out := new(SetRobotPlayerStateRsp)
	err := grpc.Invoke(ctx, "/robot.RobotService/SetRobotPlayerState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RobotService service

type RobotServiceServer interface {
	GetRobotPlayerIDByInfo(context.Context, *GetRobotPlayerIDReq) (*GetRobotPlayerIDRsp, error)
	SetRobotPlayerState(context.Context, *SetRobotPlayerStateReq) (*SetRobotPlayerStateRsp, error)
}

func RegisterRobotServiceServer(s *grpc.Server, srv RobotServiceServer) {
	s.RegisterService(&_RobotService_serviceDesc, srv)
}

func _RobotService_GetRobotPlayerIDByInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRobotPlayerIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotServiceServer).GetRobotPlayerIDByInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/robot.RobotService/GetRobotPlayerIDByInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotServiceServer).GetRobotPlayerIDByInfo(ctx, req.(*GetRobotPlayerIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RobotService_SetRobotPlayerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRobotPlayerStateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotServiceServer).SetRobotPlayerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/robot.RobotService/SetRobotPlayerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotServiceServer).SetRobotPlayerState(ctx, req.(*SetRobotPlayerStateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RobotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "robot.RobotService",
	HandlerType: (*RobotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRobotPlayerIDByInfo",
			Handler:    _RobotService_GetRobotPlayerIDByInfo_Handler,
		},
		{
			MethodName: "SetRobotPlayerState",
			Handler:    _RobotService_SetRobotPlayerState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "robot.proto",
}

func init() { proto.RegisterFile("robot.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xf3, 0x55, 0x67, 0xec, 0x36, 0x66, 0x22, 0xa5, 0x21, 0xa8, 0x52, 0xe4, 0x03, 0x8a,
	0x90, 0xa8, 0x90, 0x41, 0x48, 0x1c, 0x38, 0x84, 0xb4, 0x0a, 0x3e, 0xb4, 0xaa, 0x36, 0x20, 0x8e,
	0xd6, 0x36, 0x5e, 0x92, 0x15, 0xb1, 0xd7, 0xb5, 0x0d, 0x51, 0x7f, 0x0c, 0x3f, 0x84, 0x1f, 0xc4,
	0xff, 0x40, 0xbb, 0xde, 0x34, 0x26, 0xb8, 0x28, 0xbd, 0xed, 0xbc, 0xd9, 0xf7, 0x76, 0xde, 0x9b,
	0xc4, 0x60, 0xa5, 0xe2, 0x46, 0xe4, 0x67, 0x49, 0x2a, 0x72, 0x81, 0x4d, 0x55, 0xb8, 0x63, 0xb0,
	0xa6, 0x34, 0x62, 0x5f, 0x78, 0x4c, 0x68, 0xce, 0xf0, 0x04, 0x0e, 0x17, 0x34, 0x62, 0x01, 0x0f,
	0xfb, 0xc6, 0xd0, 0x18, 0x35, 0x49, 0x4b, 0x96, 0x7e, 0x88, 0x4f, 0xc1, 0x5c, 0xf3, 0x38, 0x48,
	0x69, 0xce, 0xfa, 0x35, 0xd5, 0x39, 0x5c, 0x17, 0x1c, 0xf7, 0xb7, 0x01, 0x1d, 0x22, 0xc5, 0xae,
	0x57, 0xf4, 0x8e, 0xa5, 0x7e, 0xfc, 0x55, 0xe0, 0x33, 0x68, 0x27, 0xaa, 0xda, 0x28, 0x35, 0x88,
	0x59, 0x00, 0x7e, 0x28, 0x9b, 0x31, 0x9f, 0x7f, 0x0b, 0x62, 0x1a, 0x15, 0x62, 0x6d, 0x62, 0x4a,
	0xe0, 0x8a, 0x46, 0x0c, 0x4f, 0x01, 0x96, 0x8c, 0x86, 0x01, 0x8f, 0xe8, 0x82, 0xf5, 0xeb, 0xaa,
	0xdb, 0x96, 0x88, 0x2f, 0x01, 0x44, 0x68, 0xcc, 0x05, 0x8f, 0xfb, 0x0d, 0xa5, 0xa9, 0xce, 0xf8,
	0x12, 0x9a, 0x59, 0x2e, 0x07, 0x6b, 0x0e, 0x8d, 0xd1, 0xb1, 0x77, 0x72, 0x56, 0xf8, 0x2c, 0xcd,
	0x34, 0x93, 0x6d, 0x52, 0xdc, 0xc2, 0xb7, 0x70, 0xa4, 0x3c, 0xde, 0xfb, 0x69, 0x0d, 0x8d, 0x91,
	0xe5, 0xa1, 0xa6, 0x95, 0xe2, 0x20, 0xd6, 0x62, 0x5b, 0xb8, 0x6f, 0xc0, 0xde, 0xe0, 0x34, 0x2e,
	0x46, 0x59, 0xf2, 0xc5, 0x52, 0x07, 0xa5, 0xce, 0xe8, 0x40, 0x7d, 0x25, 0xd6, 0x3a, 0x21, 0x79,
	0x74, 0x3d, 0x80, 0x89, 0xe0, 0x71, 0xf6, 0x18, 0xce, 0x4f, 0x03, 0xba, 0x53, 0x96, 0x97, 0x43,
	0x3d, 0x27, 0xec, 0xf6, 0xe1, 0xed, 0xbc, 0x83, 0xe3, 0x8d, 0x9b, 0x20, 0x95, 0x0f, 0x29, 0x35,
	0xcb, 0xeb, 0x6a, 0x4f, 0xe5, 0xb9, 0x89, 0xbd, 0x2e, 0xbb, 0xf0, 0xc0, 0x92, 0x21, 0x66, 0x9a,
	0x57, 0x57, 0xbc, 0x27, 0x9a, 0xb7, 0x9d, 0x9c, 0xc0, 0xfc, 0xfe, 0xec, 0xbe, 0xaf, 0x18, 0x2f,
	0x4b, 0xf0, 0x39, 0x74, 0x14, 0x2d, 0xd8, 0x5d, 0xfd, 0x51, 0x5a, 0xba, 0x1a, 0xba, 0x02, 0x7a,
	0xb3, 0xbf, 0xe8, 0xc5, 0x7a, 0xd8, 0xed, 0xbe, 0x0a, 0xdb, 0x8d, 0xd7, 0xf6, 0xd9, 0xb8, 0xfb,
	0xaa, 0xfa, 0xc1, 0x2c, 0xc1, 0x1e, 0xb4, 0x52, 0x96, 0x7d, 0x5f, 0xe5, 0xea, 0x1d, 0x93, 0xe8,
	0xea, 0xc5, 0x04, 0x9c, 0xdd, 0xeb, 0x68, 0x83, 0x49, 0xae, 0x67, 0x81, 0x7f, 0xee, 0x5f, 0x38,
	0x07, 0xe8, 0x80, 0x2d, 0xab, 0xcb, 0xf1, 0xa7, 0xc9, 0x47, 0xff, 0x6a, 0xea, 0x18, 0xd8, 0x01,
	0x4b, 0x22, 0xd3, 0xf1, 0xe5, 0x85, 0x04, 0x6a, 0xde, 0x2f, 0x03, 0x6c, 0xa5, 0x32, 0x63, 0xe9,
	0x0f, 0x3e, 0x67, 0x48, 0xa0, 0xb7, 0x9b, 0xdb, 0x87, 0x3b, 0xf5, 0x7f, 0x19, 0x6c, 0x7e, 0x7c,
	0xff, 0x6e, 0x7d, 0xf0, 0x60, 0x2f, 0x4b, 0xdc, 0x03, 0xfc, 0x0c, 0xdd, 0x0a, 0x6f, 0x78, 0xaa,
	0x49, 0xd5, 0x41, 0x0f, 0xfe, 0xd7, 0x96, 0xb2, 0x37, 0x2d, 0xf5, 0x95, 0x78, 0xfd, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x5a, 0x97, 0xa6, 0x66, 0x34, 0x04, 0x00, 0x00,
}
