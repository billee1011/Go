// Code generated by protoc-gen-go. DO NOT EDIT.
// source: room_mgr.proto

/*
Package roommgr is a generated protocol buffer package.

It is generated from these files:
	room_mgr.proto

It has these top-level messages:
	CreateDeskRequest
	CreateDeskResponse
*/
package roommgr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomError int32

const (
	RoomError_SUCCESS RoomError = 0
	RoomError_FAILED  RoomError = 1
)

var RoomError_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
}
var RoomError_value = map[string]int32{
	"SUCCESS": 0,
	"FAILED":  1,
}

func (x RoomError) String() string {
	return proto.EnumName(RoomError_name, int32(x))
}
func (RoomError) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 创建桌子的请求
type CreateDeskRequest struct {
	PlayerId []uint64 `protobuf:"varint,1,rep,packed,name=player_id,json=playerId" json:"player_id,omitempty"`
	GameId   int32    `protobuf:"varint,2,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
}

func (m *CreateDeskRequest) Reset()                    { *m = CreateDeskRequest{} }
func (m *CreateDeskRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeskRequest) ProtoMessage()               {}
func (*CreateDeskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateDeskRequest) GetPlayerId() []uint64 {
	if m != nil {
		return m.PlayerId
	}
	return nil
}

func (m *CreateDeskRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

// 创建桌子的回复
type CreateDeskResponse struct {
	ErrCode RoomError `protobuf:"varint,1,opt,name=err_code,json=errCode,enum=roommgr.RoomError" json:"err_code,omitempty"`
}

func (m *CreateDeskResponse) Reset()                    { *m = CreateDeskResponse{} }
func (m *CreateDeskResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeskResponse) ProtoMessage()               {}
func (*CreateDeskResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateDeskResponse) GetErrCode() RoomError {
	if m != nil {
		return m.ErrCode
	}
	return RoomError_SUCCESS
}

func init() {
	proto.RegisterType((*CreateDeskRequest)(nil), "roommgr.CreateDeskRequest")
	proto.RegisterType((*CreateDeskResponse)(nil), "roommgr.CreateDeskResponse")
	proto.RegisterEnum("roommgr.RoomError", RoomError_name, RoomError_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoomMgr service

type RoomMgrClient interface {
	CreateDesk(ctx context.Context, in *CreateDeskRequest, opts ...grpc.CallOption) (*CreateDeskResponse, error)
}

type roomMgrClient struct {
	cc *grpc.ClientConn
}

func NewRoomMgrClient(cc *grpc.ClientConn) RoomMgrClient {
	return &roomMgrClient{cc}
}

func (c *roomMgrClient) CreateDesk(ctx context.Context, in *CreateDeskRequest, opts ...grpc.CallOption) (*CreateDeskResponse, error) {
	out := new(CreateDeskResponse)
	err := grpc.Invoke(ctx, "/roommgr.RoomMgr/CreateDesk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoomMgr service

type RoomMgrServer interface {
	CreateDesk(context.Context, *CreateDeskRequest) (*CreateDeskResponse, error)
}

func RegisterRoomMgrServer(s *grpc.Server, srv RoomMgrServer) {
	s.RegisterService(&_RoomMgr_serviceDesc, srv)
}

func _RoomMgr_CreateDesk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomMgrServer).CreateDesk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roommgr.RoomMgr/CreateDesk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomMgrServer).CreateDesk(ctx, req.(*CreateDeskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "roommgr.RoomMgr",
	HandlerType: (*RoomMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDesk",
			Handler:    _RoomMgr_CreateDesk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "room_mgr.proto",
}

func init() { proto.RegisterFile("room_mgr.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xbb, 0xfe, 0xc9, 0xb6, 0x23, 0x94, 0x3a, 0x17, 0x4b, 0x7b, 0x09, 0xc1, 0x43, 0x10,
	0xcc, 0xa1, 0x7e, 0x02, 0xd9, 0x46, 0x09, 0xe8, 0x65, 0x83, 0xe7, 0x10, 0xdd, 0x21, 0x88, 0xae,
	0x13, 0x67, 0xe3, 0xc1, 0x6f, 0x2f, 0x6b, 0x25, 0x0a, 0xf6, 0xf8, 0xde, 0x1b, 0xde, 0x6f, 0x66,
	0x60, 0x2e, 0xcc, 0xbe, 0xf1, 0x9d, 0x14, 0xbd, 0xf0, 0xc0, 0xa8, 0xa3, 0xf6, 0x9d, 0x64, 0x15,
	0x9c, 0x1a, 0xa1, 0x76, 0xa0, 0x2d, 0x85, 0x17, 0x4b, 0xef, 0x1f, 0x14, 0x06, 0x5c, 0xc3, 0xac,
	0x7f, 0x6d, 0x3f, 0x49, 0x9a, 0x67, 0xb7, 0x54, 0xe9, 0x61, 0x7e, 0x64, 0xa7, 0x3b, 0xa3, 0x72,
	0x78, 0x06, 0xba, 0x6b, 0x3d, 0xc5, 0xe8, 0x20, 0x55, 0xf9, 0xb1, 0x4d, 0xa2, 0xac, 0x5c, 0x66,
	0x00, 0xff, 0x56, 0x85, 0x9e, 0xdf, 0x02, 0xe1, 0x25, 0x4c, 0x49, 0xa4, 0x79, 0x62, 0x47, 0x4b,
	0x95, 0xaa, 0x7c, 0xbe, 0xc1, 0xe2, 0x07, 0x5e, 0x58, 0x66, 0x5f, 0x8a, 0xb0, 0x58, 0x4d, 0x22,
	0x86, 0x1d, 0x5d, 0x9c, 0xc3, 0x6c, 0x74, 0xf1, 0x04, 0x74, 0xfd, 0x60, 0x4c, 0x59, 0xd7, 0x8b,
	0x09, 0x02, 0x24, 0x37, 0xd7, 0xd5, 0x5d, 0xb9, 0x5d, 0xa8, 0x8d, 0x05, 0x1d, 0xa7, 0xee, 0x3b,
	0xc1, 0x5b, 0x80, 0x5f, 0x2a, 0xae, 0xc6, 0xee, 0x7f, 0x57, 0xad, 0xd6, 0x7b, 0xb3, 0xdd, 0x9a,
	0xd9, 0xe4, 0x31, 0xf9, 0xfe, 0xcc, 0xd5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0x92, 0x9a,
	0xe7, 0x2b, 0x01, 0x00, 0x00,
}
