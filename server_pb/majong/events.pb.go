// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

package majong

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// EventID 事件 ID
type EventID int32

const (
	EventID_event_invalid              EventID = 0
	EventID_event_start_game           EventID = 1
	EventID_event_xipai_finish         EventID = 2
	EventID_event_fapai_finish         EventID = 3
	EventID_event_huansanzhang_request EventID = 4
	EventID_event_dingque_request      EventID = 5
	EventID_event_peng_request         EventID = 6
	EventID_event_gang_request         EventID = 7
	EventID_event_hu_request           EventID = 8
	EventID_event_qi_request           EventID = 9
	EventID_event_chupai_finish        EventID = 10
	EventID_event_angang_finish        EventID = 11
	EventID_event_zimo_finish          EventID = 12
	EventID_event_chupai_request       EventID = 13
	EventID_event_gang_finish          EventID = 14
	EventID_event_hu_finish            EventID = 15
	EventID_event_mopai_finish         EventID = 16
	// event_zimo_request = 17;            // 自摸请求事件
	// event_angang_request = 18;          // 暗杠请求事件
	// event_bugang_request = 19;          // 补杠请求事件
	EventID_event_bugang_finish EventID = 20
	// event_qiangganghu_request = 21;     // 抢杠胡请求事件
	// event_qiqiangganghu_request = 22;   // 放弃抢杠胡请求事件
	EventID_event_qiangganghu_finish     EventID = 23
	EventID_event_wenxun_overtime        EventID = 24
	EventID_event_peng_finish            EventID = 25
	EventID_event_timer                  EventID = 26
	EventID_event_huansanzhang_finish    EventID = 27
	EventID_event_cartoon_finish_request EventID = 28
	EventID_event_settle_finish          EventID = 29
)

var EventID_name = map[int32]string{
	0:  "event_invalid",
	1:  "event_start_game",
	2:  "event_xipai_finish",
	3:  "event_fapai_finish",
	4:  "event_huansanzhang_request",
	5:  "event_dingque_request",
	6:  "event_peng_request",
	7:  "event_gang_request",
	8:  "event_hu_request",
	9:  "event_qi_request",
	10: "event_chupai_finish",
	11: "event_angang_finish",
	12: "event_zimo_finish",
	13: "event_chupai_request",
	14: "event_gang_finish",
	15: "event_hu_finish",
	16: "event_mopai_finish",
	20: "event_bugang_finish",
	23: "event_qiangganghu_finish",
	24: "event_wenxun_overtime",
	25: "event_peng_finish",
	26: "event_timer",
	27: "event_huansanzhang_finish",
	28: "event_cartoon_finish_request",
	29: "event_settle_finish",
}
var EventID_value = map[string]int32{
	"event_invalid":                0,
	"event_start_game":             1,
	"event_xipai_finish":           2,
	"event_fapai_finish":           3,
	"event_huansanzhang_request":   4,
	"event_dingque_request":        5,
	"event_peng_request":           6,
	"event_gang_request":           7,
	"event_hu_request":             8,
	"event_qi_request":             9,
	"event_chupai_finish":          10,
	"event_angang_finish":          11,
	"event_zimo_finish":            12,
	"event_chupai_request":         13,
	"event_gang_finish":            14,
	"event_hu_finish":              15,
	"event_mopai_finish":           16,
	"event_bugang_finish":          20,
	"event_qiangganghu_finish":     23,
	"event_wenxun_overtime":        24,
	"event_peng_finish":            25,
	"event_timer":                  26,
	"event_huansanzhang_finish":    27,
	"event_cartoon_finish_request": 28,
	"event_settle_finish":          29,
}

func (x EventID) String() string {
	return proto.EnumName(EventID_name, int32(x))
}
func (EventID) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// RequestEventHead 请求事件通用头
type RequestEventHead struct {
	PlayerId uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
}

func (m *RequestEventHead) Reset()                    { *m = RequestEventHead{} }
func (m *RequestEventHead) String() string            { return proto.CompactTextString(m) }
func (*RequestEventHead) ProtoMessage()               {}
func (*RequestEventHead) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *RequestEventHead) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// StartGameEvent 开始游戏事件
type StartGameEvent struct {
}

func (m *StartGameEvent) Reset()                    { *m = StartGameEvent{} }
func (m *StartGameEvent) String() string            { return proto.CompactTextString(m) }
func (*StartGameEvent) ProtoMessage()               {}
func (*StartGameEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// XipaiFinishEvent 洗牌完成事件
type XipaiFinishEvent struct {
}

func (m *XipaiFinishEvent) Reset()                    { *m = XipaiFinishEvent{} }
func (m *XipaiFinishEvent) String() string            { return proto.CompactTextString(m) }
func (*XipaiFinishEvent) ProtoMessage()               {}
func (*XipaiFinishEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// FapaiFinishEvent 发牌完成事件
type FapaiFinishEvent struct {
}

func (m *FapaiFinishEvent) Reset()                    { *m = FapaiFinishEvent{} }
func (m *FapaiFinishEvent) String() string            { return proto.CompactTextString(m) }
func (*FapaiFinishEvent) ProtoMessage()               {}
func (*FapaiFinishEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// HuansanzhangRequestEvent 换三张请求事件
type HuansanzhangRequestEvent struct {
	Head  *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Cards []*Card           `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	Sure  bool              `protobuf:"varint,3,opt,name=sure" json:"sure,omitempty"`
}

func (m *HuansanzhangRequestEvent) Reset()                    { *m = HuansanzhangRequestEvent{} }
func (m *HuansanzhangRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*HuansanzhangRequestEvent) ProtoMessage()               {}
func (*HuansanzhangRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *HuansanzhangRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *HuansanzhangRequestEvent) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *HuansanzhangRequestEvent) GetSure() bool {
	if m != nil {
		return m.Sure
	}
	return false
}

// DingqueRequestEvent 定缺请求事件
type DingqueRequestEvent struct {
	Head  *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Color CardColor         `protobuf:"varint,3,opt,name=color,enum=majong.CardColor" json:"color,omitempty"`
}

func (m *DingqueRequestEvent) Reset()                    { *m = DingqueRequestEvent{} }
func (m *DingqueRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*DingqueRequestEvent) ProtoMessage()               {}
func (*DingqueRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DingqueRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *DingqueRequestEvent) GetColor() CardColor {
	if m != nil {
		return m.Color
	}
	return CardColor_ColorWan
}

// BugangRequestEvent 补杠请求事件
type BugangRequestEvent struct {
	Head  *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Cards *Card             `protobuf:"bytes,2,opt,name=cards" json:"cards,omitempty"`
}

func (m *BugangRequestEvent) Reset()                    { *m = BugangRequestEvent{} }
func (m *BugangRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*BugangRequestEvent) ProtoMessage()               {}
func (*BugangRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *BugangRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *BugangRequestEvent) GetCards() *Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

// ChupaiRequestEvent 出牌请求事件
type ChupaiRequestEvent struct {
	Head  *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Cards *Card             `protobuf:"bytes,2,opt,name=cards" json:"cards,omitempty"`
}

func (m *ChupaiRequestEvent) Reset()                    { *m = ChupaiRequestEvent{} }
func (m *ChupaiRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*ChupaiRequestEvent) ProtoMessage()               {}
func (*ChupaiRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ChupaiRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ChupaiRequestEvent) GetCards() *Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

// PengRequestEvent 碰请求事件
type PengRequestEvent struct {
	Head *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
}

func (m *PengRequestEvent) Reset()                    { *m = PengRequestEvent{} }
func (m *PengRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*PengRequestEvent) ProtoMessage()               {}
func (*PengRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *PengRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

// GangRequestEvent 明杠请求事件
type GangRequestEvent struct {
	Head *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Card *Card             `protobuf:"bytes,2,opt,name=card" json:"card,omitempty"`
}

func (m *GangRequestEvent) Reset()                    { *m = GangRequestEvent{} }
func (m *GangRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*GangRequestEvent) ProtoMessage()               {}
func (*GangRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *GangRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *GangRequestEvent) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

// HuRequestEvent 胡请求事件
type HuRequestEvent struct {
	Head *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
}

func (m *HuRequestEvent) Reset()                    { *m = HuRequestEvent{} }
func (m *HuRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*HuRequestEvent) ProtoMessage()               {}
func (*HuRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *HuRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

// QiRequestEvent 弃请求事件
type QiRequestEvent struct {
	Head *RequestEventHead `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
}

func (m *QiRequestEvent) Reset()                    { *m = QiRequestEvent{} }
func (m *QiRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*QiRequestEvent) ProtoMessage()               {}
func (*QiRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *QiRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

// CartoonFinishRequestEvent 动画完成时间
type CartoonFinishRequestEvent struct {
	CartoonType int32 `protobuf:"varint,1,opt,name=cartoon_type,json=cartoonType" json:"cartoon_type,omitempty"`
}

func (m *CartoonFinishRequestEvent) Reset()                    { *m = CartoonFinishRequestEvent{} }
func (m *CartoonFinishRequestEvent) String() string            { return proto.CompactTextString(m) }
func (*CartoonFinishRequestEvent) ProtoMessage()               {}
func (*CartoonFinishRequestEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *CartoonFinishRequestEvent) GetCartoonType() int32 {
	if m != nil {
		return m.CartoonType
	}
	return 0
}

// SettleFinishEvent 结算完成事件
type SettleFinishEvent struct {
	PlayerId []uint64 `protobuf:"varint,1,rep,packed,name=player_id,json=playerId" json:"player_id,omitempty"`
}

func (m *SettleFinishEvent) Reset()                    { *m = SettleFinishEvent{} }
func (m *SettleFinishEvent) String() string            { return proto.CompactTextString(m) }
func (*SettleFinishEvent) ProtoMessage()               {}
func (*SettleFinishEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *SettleFinishEvent) GetPlayerId() []uint64 {
	if m != nil {
		return m.PlayerId
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestEventHead)(nil), "majong.RequestEventHead")
	proto.RegisterType((*StartGameEvent)(nil), "majong.StartGameEvent")
	proto.RegisterType((*XipaiFinishEvent)(nil), "majong.XipaiFinishEvent")
	proto.RegisterType((*FapaiFinishEvent)(nil), "majong.FapaiFinishEvent")
	proto.RegisterType((*HuansanzhangRequestEvent)(nil), "majong.HuansanzhangRequestEvent")
	proto.RegisterType((*DingqueRequestEvent)(nil), "majong.DingqueRequestEvent")
	proto.RegisterType((*BugangRequestEvent)(nil), "majong.BugangRequestEvent")
	proto.RegisterType((*ChupaiRequestEvent)(nil), "majong.ChupaiRequestEvent")
	proto.RegisterType((*PengRequestEvent)(nil), "majong.PengRequestEvent")
	proto.RegisterType((*GangRequestEvent)(nil), "majong.GangRequestEvent")
	proto.RegisterType((*HuRequestEvent)(nil), "majong.HuRequestEvent")
	proto.RegisterType((*QiRequestEvent)(nil), "majong.QiRequestEvent")
	proto.RegisterType((*CartoonFinishRequestEvent)(nil), "majong.CartoonFinishRequestEvent")
	proto.RegisterType((*SettleFinishEvent)(nil), "majong.SettleFinishEvent")
	proto.RegisterEnum("majong.EventID", EventID_name, EventID_value)
}

func init() { proto.RegisterFile("events.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0x4d, 0x6f, 0xd3, 0x4e,
	0x10, 0xc6, 0xff, 0x6e, 0x9c, 0xbe, 0x4c, 0xd2, 0x74, 0xb3, 0x6d, 0xff, 0x75, 0xfa, 0x82, 0x82,
	0x2f, 0x54, 0x08, 0x05, 0x14, 0xee, 0x15, 0x22, 0xa5, 0x4d, 0x6f, 0xe0, 0x72, 0xe0, 0x66, 0x6d,
	0xe2, 0x8d, 0xbd, 0x28, 0xde, 0x75, 0xfc, 0x12, 0x9a, 0x9e, 0xf8, 0xd0, 0x7c, 0x00, 0xe4, 0x5d,
	0xdb, 0xeb, 0x46, 0xe5, 0x14, 0xb8, 0x55, 0xbf, 0x67, 0xe6, 0x99, 0x67, 0xdc, 0x1d, 0x05, 0xda,
	0x74, 0x49, 0x79, 0x9a, 0x0c, 0xa2, 0x58, 0xa4, 0x02, 0x6f, 0x87, 0xe4, 0xbb, 0xe0, 0xfe, 0x69,
	0x7b, 0x2a, 0xc2, 0x50, 0x70, 0x45, 0xed, 0xb7, 0x80, 0x1c, 0xba, 0xc8, 0x68, 0x92, 0x7e, 0xca,
	0x8b, 0xc7, 0x94, 0x78, 0xf8, 0x0c, 0xf6, 0xa2, 0x39, 0x59, 0xd1, 0xd8, 0x65, 0x9e, 0x65, 0xf4,
	0x8d, 0x4b, 0xd3, 0xd9, 0x55, 0xe0, 0xce, 0xb3, 0x11, 0x74, 0xee, 0x53, 0x12, 0xa7, 0xb7, 0x24,
	0xa4, 0xb2, 0xc5, 0xc6, 0x80, 0xbe, 0xb1, 0x88, 0xb0, 0x1b, 0xc6, 0x59, 0x12, 0x54, 0xec, 0x86,
	0xac, 0xb1, 0x9f, 0x06, 0x58, 0xe3, 0x8c, 0xf0, 0x84, 0xf0, 0xc7, 0x80, 0x70, 0xbf, 0x3e, 0x17,
	0xbf, 0x01, 0x33, 0xa0, 0x44, 0x8d, 0x6b, 0x0d, 0xad, 0x81, 0x0a, 0x3b, 0x58, 0xcf, 0xe6, 0xc8,
	0x2a, 0x6c, 0x43, 0x73, 0x4a, 0x62, 0x2f, 0xb1, 0xb6, 0xfa, 0x8d, 0xcb, 0xd6, 0xb0, 0x5d, 0x96,
	0x8f, 0x48, 0xec, 0x39, 0x4a, 0xc2, 0x18, 0xcc, 0x24, 0x8b, 0xa9, 0xd5, 0xe8, 0x1b, 0x97, 0xbb,
	0x8e, 0xfc, 0xdb, 0x9e, 0xc3, 0xe1, 0x35, 0xe3, 0xfe, 0x22, 0xa3, 0x1b, 0x0c, 0x7f, 0x05, 0xcd,
	0xa9, 0x98, 0x8b, 0x58, 0x3a, 0x77, 0x86, 0xdd, 0xfa, 0xf0, 0x51, 0x2e, 0x38, 0x4a, 0xb7, 0x67,
	0x80, 0x3f, 0x66, 0xfe, 0x5f, 0xdb, 0xd4, 0xf8, 0xc3, 0xa6, 0xf9, 0x9c, 0x51, 0x90, 0x45, 0x84,
	0xfd, 0xe3, 0x39, 0x1f, 0x00, 0x7d, 0xa6, 0x9b, 0x6c, 0x63, 0x4f, 0x00, 0xdd, 0x6e, 0xf6, 0x3d,
	0xfa, 0x60, 0xe6, 0x61, 0x9e, 0x8d, 0x29, 0x15, 0xfb, 0x0a, 0x3a, 0xe3, 0x6c, 0x83, 0x8c, 0x57,
	0xd0, 0xf9, 0xc2, 0x36, 0xea, 0xef, 0x8d, 0x48, 0x9c, 0x0a, 0xc1, 0xd5, 0xe3, 0x7f, 0x62, 0xf5,
	0x12, 0xda, 0x53, 0x25, 0xba, 0xe9, 0x2a, 0xa2, 0xd2, 0xb2, 0xe9, 0xb4, 0x0a, 0xf6, 0x75, 0x15,
	0x51, 0xfb, 0x1d, 0x74, 0xef, 0x69, 0x9a, 0xce, 0x69, 0xed, 0x76, 0xd6, 0x4f, 0xb2, 0x51, 0x3f,
	0xc9, 0xd7, 0xbf, 0x4c, 0xd8, 0x91, 0x65, 0x77, 0xd7, 0xb8, 0x0b, 0xfb, 0xf2, 0xea, 0x5d, 0xc6,
	0x97, 0x64, 0xce, 0x3c, 0xf4, 0x1f, 0x3e, 0x02, 0xa4, 0x50, 0x92, 0xdf, 0xad, 0xeb, 0x93, 0x90,
	0x22, 0x03, 0xff, 0x0f, 0x58, 0xd1, 0x87, 0xfc, 0x76, 0xdd, 0x99, 0x1c, 0x86, 0xb6, 0x34, 0x9f,
	0x91, 0x1a, 0x6f, 0xe0, 0x17, 0x70, 0xaa, 0x78, 0x50, 0x3b, 0x61, 0x37, 0x56, 0xcb, 0x21, 0x13,
	0xf7, 0xe0, 0x58, 0xe9, 0x9e, 0x3a, 0xb0, 0x4a, 0x6a, 0x6a, 0xcb, 0x88, 0xd6, 0x5a, 0xb6, 0x35,
	0xf7, 0xeb, 0x56, 0x3b, 0x3a, 0x70, 0x90, 0x55, 0x74, 0x57, 0xd3, 0x05, 0xab, 0xe8, 0x1e, 0x3e,
	0x81, 0x43, 0x45, 0xa7, 0xf2, 0x02, 0xca, 0xbc, 0xa0, 0x05, 0xc2, 0xa5, 0x7d, 0x21, 0xb4, 0xf0,
	0x31, 0x74, 0x95, 0xf0, 0xc8, 0x42, 0x51, 0xe2, 0x36, 0xb6, 0xe0, 0xe8, 0x89, 0x51, 0x39, 0x62,
	0x5f, 0x37, 0xd4, 0x7d, 0x3a, 0xf8, 0x10, 0x0e, 0xaa, 0x94, 0x05, 0x3c, 0xd0, 0x2b, 0x85, 0xa2,
	0x96, 0x06, 0xe9, 0x34, 0x93, 0xac, 0xee, 0x72, 0x84, 0xcf, 0xc1, 0x2a, 0xb7, 0x22, 0xdc, 0xcf,
	0x35, 0x6d, 0x77, 0xa2, 0x3f, 0xea, 0x0f, 0xca, 0x1f, 0x32, 0xee, 0x8a, 0x25, 0x8d, 0x53, 0x16,
	0x52, 0x64, 0xe9, 0x54, 0xf2, 0xa3, 0x16, 0x1d, 0x3d, 0x7c, 0x00, 0x2d, 0x85, 0xf3, 0xb2, 0x18,
	0x9d, 0xe2, 0x0b, 0xe8, 0x3d, 0xf3, 0x7f, 0x2b, 0xea, 0xcf, 0x70, 0x1f, 0xce, 0x8b, 0xb5, 0x8b,
	0x67, 0xa9, 0x94, 0x6a, 0xfd, 0x73, 0x1d, 0x3d, 0x91, 0xaf, 0xb2, 0x6c, 0xbd, 0x98, 0x6c, 0xcb,
	0x5f, 0x90, 0xf7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x09, 0x97, 0x50, 0x22, 0x67, 0x06, 0x00,
	0x00,
}
