// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

/*
Package gateway is a generated protocol buffer package.

It is generated from these files:
	gateway.proto

It has these top-level messages:
	GatewayAddress
	GetGatewayAddressRequest
	GetGatewayAddressResponse
*/
package gateway

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// GatewayAddress 网关地址
type GatewayAddress struct {
	Ip   string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *GatewayAddress) Reset()                    { *m = GatewayAddress{} }
func (m *GatewayAddress) String() string            { return proto.CompactTextString(m) }
func (*GatewayAddress) ProtoMessage()               {}
func (*GatewayAddress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GatewayAddress) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *GatewayAddress) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type GetGatewayAddressRequest struct {
}

func (m *GetGatewayAddressRequest) Reset()                    { *m = GetGatewayAddressRequest{} }
func (m *GetGatewayAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*GetGatewayAddressRequest) ProtoMessage()               {}
func (*GetGatewayAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetGatewayAddressResponse struct {
	Addr *GatewayAddress `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
}

func (m *GetGatewayAddressResponse) Reset()                    { *m = GetGatewayAddressResponse{} }
func (m *GetGatewayAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*GetGatewayAddressResponse) ProtoMessage()               {}
func (*GetGatewayAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetGatewayAddressResponse) GetAddr() *GatewayAddress {
	if m != nil {
		return m.Addr
	}
	return nil
}

func init() {
	proto.RegisterType((*GatewayAddress)(nil), "gateway.GatewayAddress")
	proto.RegisterType((*GetGatewayAddressRequest)(nil), "gateway.GetGatewayAddressRequest")
	proto.RegisterType((*GetGatewayAddressResponse)(nil), "gateway.GetGatewayAddressResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GateService service

type GateServiceClient interface {
	GetGatewayAddress(ctx context.Context, in *GetGatewayAddressRequest, opts ...grpc.CallOption) (*GetGatewayAddressResponse, error)
}

type gateServiceClient struct {
	cc *grpc.ClientConn
}

func NewGateServiceClient(cc *grpc.ClientConn) GateServiceClient {
	return &gateServiceClient{cc}
}

func (c *gateServiceClient) GetGatewayAddress(ctx context.Context, in *GetGatewayAddressRequest, opts ...grpc.CallOption) (*GetGatewayAddressResponse, error) {
	out := new(GetGatewayAddressResponse)
	err := grpc.Invoke(ctx, "/gateway.GateService/GetGatewayAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GateService service

type GateServiceServer interface {
	GetGatewayAddress(context.Context, *GetGatewayAddressRequest) (*GetGatewayAddressResponse, error)
}

func RegisterGateServiceServer(s *grpc.Server, srv GateServiceServer) {
	s.RegisterService(&_GateService_serviceDesc, srv)
}

func _GateService_GetGatewayAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GateServiceServer).GetGatewayAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.GateService/GetGatewayAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GateServiceServer).GetGatewayAddress(ctx, req.(*GetGatewayAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gateway.GateService",
	HandlerType: (*GateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGatewayAddress",
			Handler:    _GateService_GetGatewayAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gateway.proto",
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4f, 0x2c, 0x49,
	0x2d, 0x4f, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x4c, 0xb8,
	0xf8, 0xdc, 0x21, 0x4c, 0xc7, 0x94, 0x94, 0xa2, 0xd4, 0xe2, 0x62, 0x21, 0x3e, 0x2e, 0xa6, 0xcc,
	0x02, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0xa6, 0xcc, 0x02, 0x21, 0x21, 0x2e, 0x96, 0x82,
	0xfc, 0xa2, 0x12, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x30, 0x5b, 0x49, 0x8a, 0x4b, 0xc2,
	0x3d, 0xb5, 0x04, 0x55, 0x63, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x92, 0x07, 0x97, 0x24,
	0x16, 0xb9, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x6d, 0x2e, 0x96, 0xc4, 0x94, 0x94, 0x22,
	0xb0, 0xf1, 0xdc, 0x46, 0xe2, 0x7a, 0x30, 0x57, 0xa1, 0x29, 0x07, 0x2b, 0x32, 0xca, 0xe6, 0xe2,
	0x06, 0x89, 0x07, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0xc5, 0x70, 0x09, 0x62, 0x18, 0x2c,
	0xa4, 0x88, 0x30, 0x02, 0x87, 0x83, 0xa4, 0x94, 0xf0, 0x29, 0x81, 0xb8, 0x4b, 0x89, 0x21, 0x89,
	0x0d, 0x1c, 0x30, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x40, 0x56, 0xf6, 0xb2, 0x29, 0x01,
	0x00, 0x00,
}
