// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

package ddz

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// EventID 事件 ID
type EventID int32

const (
	EventID_event_invalid         EventID = 0
	EventID_event_start_game      EventID = 1
	EventID_event_deal_finish     EventID = 2
	EventID_event_grab_request    EventID = 3
	EventID_event_double_request  EventID = 4
	EventID_event_chupai_request  EventID = 5
	EventID_event_showhand_finish EventID = 6
	EventID_event_resume_request  EventID = 7
)

var EventID_name = map[int32]string{
	0: "event_invalid",
	1: "event_start_game",
	2: "event_deal_finish",
	3: "event_grab_request",
	4: "event_double_request",
	5: "event_chupai_request",
	6: "event_showhand_finish",
	7: "event_resume_request",
}
var EventID_value = map[string]int32{
	"event_invalid":         0,
	"event_start_game":      1,
	"event_deal_finish":     2,
	"event_grab_request":    3,
	"event_double_request":  4,
	"event_chupai_request":  5,
	"event_showhand_finish": 6,
	"event_resume_request":  7,
}

func (x EventID) String() string {
	return proto.EnumName(EventID_name, int32(x))
}
func (EventID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_events_378f2115669d0c4c, []int{0}
}

type CardType int32

const (
	CardType_CT_NONE     CardType = 0
	CardType_CT_SINGLE   CardType = 1
	CardType_CT_PAIR     CardType = 2
	CardType_CT_SHUNZI   CardType = 3
	CardType_CT_PAIRS    CardType = 4
	CardType_CT_TRIPLE   CardType = 5
	CardType_CT_3AND1    CardType = 6
	CardType_CT_3AND2    CardType = 7
	CardType_CT_TRIPLES  CardType = 8
	CardType_CT_3SAND1S  CardType = 9
	CardType_CT_3SAND2S  CardType = 10
	CardType_CT_4SAND1S  CardType = 11
	CardType_CT_4SAND2S  CardType = 12
	CardType_CT_BOMB     CardType = 13
	CardType_CT_KINGBOMB CardType = 14
)

var CardType_name = map[int32]string{
	0:  "CT_NONE",
	1:  "CT_SINGLE",
	2:  "CT_PAIR",
	3:  "CT_SHUNZI",
	4:  "CT_PAIRS",
	5:  "CT_TRIPLE",
	6:  "CT_3AND1",
	7:  "CT_3AND2",
	8:  "CT_TRIPLES",
	9:  "CT_3SAND1S",
	10: "CT_3SAND2S",
	11: "CT_4SAND1S",
	12: "CT_4SAND2S",
	13: "CT_BOMB",
	14: "CT_KINGBOMB",
}
var CardType_value = map[string]int32{
	"CT_NONE":     0,
	"CT_SINGLE":   1,
	"CT_PAIR":     2,
	"CT_SHUNZI":   3,
	"CT_PAIRS":    4,
	"CT_TRIPLE":   5,
	"CT_3AND1":    6,
	"CT_3AND2":    7,
	"CT_TRIPLES":  8,
	"CT_3SAND1S":  9,
	"CT_3SAND2S":  10,
	"CT_4SAND1S":  11,
	"CT_4SAND2S":  12,
	"CT_BOMB":     13,
	"CT_KINGBOMB": 14,
}

func (x CardType) String() string {
	return proto.EnumName(CardType_name, int32(x))
}
func (CardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_events_378f2115669d0c4c, []int{1}
}

// RequestEventHead 请求事件通用头
type RequestEventHead struct {
	PlayerId             uint64   `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestEventHead) Reset()         { *m = RequestEventHead{} }
func (m *RequestEventHead) String() string { return proto.CompactTextString(m) }
func (*RequestEventHead) ProtoMessage()    {}
func (*RequestEventHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_378f2115669d0c4c, []int{0}
}
func (m *RequestEventHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestEventHead.Unmarshal(m, b)
}
func (m *RequestEventHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestEventHead.Marshal(b, m, deterministic)
}
func (dst *RequestEventHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestEventHead.Merge(dst, src)
}
func (m *RequestEventHead) XXX_Size() int {
	return xxx_messageInfo_RequestEventHead.Size(m)
}
func (m *RequestEventHead) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestEventHead.DiscardUnknown(m)
}

var xxx_messageInfo_RequestEventHead proto.InternalMessageInfo

func (m *RequestEventHead) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// GrabRequestEvent 叫/抢地主请求事件
type GrabRequestEvent struct {
	Head                 *RequestEventHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Grab                 bool              `protobuf:"varint,2,opt,name=grab,proto3" json:"grab,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GrabRequestEvent) Reset()         { *m = GrabRequestEvent{} }
func (m *GrabRequestEvent) String() string { return proto.CompactTextString(m) }
func (*GrabRequestEvent) ProtoMessage()    {}
func (*GrabRequestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_378f2115669d0c4c, []int{1}
}
func (m *GrabRequestEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrabRequestEvent.Unmarshal(m, b)
}
func (m *GrabRequestEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrabRequestEvent.Marshal(b, m, deterministic)
}
func (dst *GrabRequestEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrabRequestEvent.Merge(dst, src)
}
func (m *GrabRequestEvent) XXX_Size() int {
	return xxx_messageInfo_GrabRequestEvent.Size(m)
}
func (m *GrabRequestEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GrabRequestEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GrabRequestEvent proto.InternalMessageInfo

func (m *GrabRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *GrabRequestEvent) GetGrab() bool {
	if m != nil {
		return m.Grab
	}
	return false
}

// DoubleRequestEvent 加倍请求事件
type DoubleRequestEvent struct {
	Head                 *RequestEventHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	IsDouble             bool              `protobuf:"varint,2,opt,name=is_double,json=isDouble,proto3" json:"is_double,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DoubleRequestEvent) Reset()         { *m = DoubleRequestEvent{} }
func (m *DoubleRequestEvent) String() string { return proto.CompactTextString(m) }
func (*DoubleRequestEvent) ProtoMessage()    {}
func (*DoubleRequestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_378f2115669d0c4c, []int{2}
}
func (m *DoubleRequestEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleRequestEvent.Unmarshal(m, b)
}
func (m *DoubleRequestEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleRequestEvent.Marshal(b, m, deterministic)
}
func (dst *DoubleRequestEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleRequestEvent.Merge(dst, src)
}
func (m *DoubleRequestEvent) XXX_Size() int {
	return xxx_messageInfo_DoubleRequestEvent.Size(m)
}
func (m *DoubleRequestEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleRequestEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleRequestEvent proto.InternalMessageInfo

func (m *DoubleRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *DoubleRequestEvent) GetIsDouble() bool {
	if m != nil {
		return m.IsDouble
	}
	return false
}

// PlayCardRequestEvent 出牌请求事件
type PlayCardRequestEvent struct {
	Head                 *RequestEventHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Cards                []uint32          `protobuf:"varint,2,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	CardType             CardType          `protobuf:"varint,3,opt,name=card_type,json=cardType,proto3,enum=ddz.CardType" json:"card_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlayCardRequestEvent) Reset()         { *m = PlayCardRequestEvent{} }
func (m *PlayCardRequestEvent) String() string { return proto.CompactTextString(m) }
func (*PlayCardRequestEvent) ProtoMessage()    {}
func (*PlayCardRequestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_378f2115669d0c4c, []int{3}
}
func (m *PlayCardRequestEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayCardRequestEvent.Unmarshal(m, b)
}
func (m *PlayCardRequestEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayCardRequestEvent.Marshal(b, m, deterministic)
}
func (dst *PlayCardRequestEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayCardRequestEvent.Merge(dst, src)
}
func (m *PlayCardRequestEvent) XXX_Size() int {
	return xxx_messageInfo_PlayCardRequestEvent.Size(m)
}
func (m *PlayCardRequestEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayCardRequestEvent.DiscardUnknown(m)
}

var xxx_messageInfo_PlayCardRequestEvent proto.InternalMessageInfo

func (m *PlayCardRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *PlayCardRequestEvent) GetCards() []uint32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *PlayCardRequestEvent) GetCardType() CardType {
	if m != nil {
		return m.CardType
	}
	return CardType_CT_NONE
}

// ResumeRequestEvent 恢复对局请求事件
type ResumeRequestEvent struct {
	Head                 *RequestEventHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResumeRequestEvent) Reset()         { *m = ResumeRequestEvent{} }
func (m *ResumeRequestEvent) String() string { return proto.CompactTextString(m) }
func (*ResumeRequestEvent) ProtoMessage()    {}
func (*ResumeRequestEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_378f2115669d0c4c, []int{4}
}
func (m *ResumeRequestEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRequestEvent.Unmarshal(m, b)
}
func (m *ResumeRequestEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRequestEvent.Marshal(b, m, deterministic)
}
func (dst *ResumeRequestEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRequestEvent.Merge(dst, src)
}
func (m *ResumeRequestEvent) XXX_Size() int {
	return xxx_messageInfo_ResumeRequestEvent.Size(m)
}
func (m *ResumeRequestEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRequestEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRequestEvent proto.InternalMessageInfo

func (m *ResumeRequestEvent) GetHead() *RequestEventHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestEventHead)(nil), "ddz.RequestEventHead")
	proto.RegisterType((*GrabRequestEvent)(nil), "ddz.GrabRequestEvent")
	proto.RegisterType((*DoubleRequestEvent)(nil), "ddz.DoubleRequestEvent")
	proto.RegisterType((*PlayCardRequestEvent)(nil), "ddz.PlayCardRequestEvent")
	proto.RegisterType((*ResumeRequestEvent)(nil), "ddz.ResumeRequestEvent")
	proto.RegisterEnum("ddz.EventID", EventID_name, EventID_value)
	proto.RegisterEnum("ddz.CardType", CardType_name, CardType_value)
}

func init() { proto.RegisterFile("events.proto", fileDescriptor_events_378f2115669d0c4c) }

var fileDescriptor_events_378f2115669d0c4c = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcf, 0x6e, 0xda, 0x40,
	0x10, 0xc6, 0x63, 0xfe, 0x9a, 0xe1, 0x4f, 0x27, 0x23, 0xa8, 0xa8, 0x72, 0x41, 0x9c, 0x28, 0x07,
	0xaa, 0x42, 0xef, 0x55, 0x02, 0x88, 0x58, 0x4d, 0x1d, 0x6a, 0xbb, 0x97, 0xaa, 0xd2, 0x6a, 0x61,
	0xb7, 0xb1, 0x25, 0x07, 0x5c, 0xdb, 0xa4, 0x22, 0xd7, 0xbe, 0x5d, 0xdf, 0xa4, 0x6f, 0x51, 0x79,
	0xbd, 0x10, 0xd4, 0x23, 0xb7, 0xf9, 0xbe, 0xdf, 0xcc, 0x37, 0xec, 0x20, 0x43, 0x43, 0x3e, 0xc9,
	0x4d, 0x9a, 0x8c, 0xa2, 0x78, 0x9b, 0x6e, 0xa9, 0x28, 0xc4, 0x73, 0xff, 0x1d, 0xa0, 0x23, 0x7f,
	0xee, 0x64, 0x92, 0xce, 0x33, 0x76, 0x2b, 0xb9, 0xa0, 0x2b, 0xa8, 0x45, 0x21, 0xdf, 0xcb, 0x98,
	0x05, 0xa2, 0x6b, 0xf4, 0x8c, 0x41, 0xc9, 0x31, 0x73, 0xc3, 0x12, 0xfd, 0x2f, 0x80, 0x8b, 0x98,
	0xaf, 0x4e, 0x87, 0xe8, 0x2d, 0x94, 0x7c, 0xc9, 0xf3, 0xde, 0xfa, 0xb8, 0x33, 0x12, 0xe2, 0x79,
	0xf4, 0x7f, 0xaa, 0xa3, 0x5a, 0x88, 0xa0, 0xf4, 0x10, 0xf3, 0x55, 0xb7, 0xd0, 0x33, 0x06, 0xa6,
	0xa3, 0xea, 0xfe, 0x77, 0xa0, 0xd9, 0x76, 0xb7, 0x0a, 0xe5, 0xb9, 0xa1, 0x57, 0x50, 0x0b, 0x12,
	0x26, 0x54, 0x86, 0x4e, 0x36, 0x83, 0x24, 0xcf, 0xec, 0xff, 0x36, 0xa0, 0xbd, 0x0c, 0xf9, 0x7e,
	0xca, 0x63, 0x71, 0xee, 0x82, 0x36, 0x94, 0xd7, 0x3c, 0x16, 0x49, 0xb7, 0xd0, 0x2b, 0x0e, 0x9a,
	0x4e, 0x2e, 0x68, 0x08, 0xb5, 0xac, 0x60, 0xe9, 0x3e, 0x92, 0xdd, 0x62, 0xcf, 0x18, 0xb4, 0xc6,
	0x4d, 0x95, 0x92, 0xad, 0xf2, 0xf6, 0x91, 0x74, 0xcc, 0xb5, 0xae, 0xfa, 0x1f, 0x81, 0x1c, 0x99,
	0xec, 0x1e, 0xcf, 0x7d, 0xe3, 0xf0, 0x8f, 0x01, 0x55, 0xe5, 0x59, 0x33, 0xba, 0x84, 0xa6, 0xfa,
	0x27, 0x59, 0xb0, 0x79, 0xe2, 0x61, 0x20, 0xf0, 0x82, 0xda, 0x80, 0xb9, 0x95, 0xa4, 0x3c, 0x4e,
	0xd9, 0x03, 0x7f, 0x94, 0x68, 0x50, 0x07, 0x2e, 0x73, 0x57, 0x48, 0x1e, 0xb2, 0x1f, 0xc1, 0x26,
	0x48, 0x7c, 0x2c, 0xd0, 0x6b, 0xa0, 0xdc, 0xce, 0xce, 0xcf, 0xe2, 0x7c, 0x21, 0x16, 0xa9, 0x0b,
	0x6d, 0xdd, 0xae, 0x4e, 0x77, 0x24, 0xa5, 0x17, 0xb2, 0xf6, 0x77, 0x11, 0x0f, 0x8e, 0xa4, 0x4c,
	0x6f, 0xa0, 0xa3, 0x17, 0xfb, 0xdb, 0x5f, 0x3e, 0xdf, 0x88, 0xc3, 0x9a, 0xca, 0xcb, 0x50, 0xac,
	0x5e, 0x7e, 0x1c, 0xaa, 0x0e, 0xff, 0x1a, 0x60, 0x1e, 0x8e, 0x44, 0x75, 0xa8, 0x4e, 0x3d, 0x66,
	0xdf, 0xdb, 0x73, 0xbc, 0xa0, 0x26, 0xd4, 0xa6, 0x1e, 0x73, 0x2d, 0x7b, 0x71, 0x37, 0x47, 0x43,
	0xb3, 0xe5, 0xb5, 0xe5, 0x60, 0xe1, 0xc0, 0x6e, 0xbf, 0xda, 0xdf, 0x2c, 0x2c, 0x52, 0x03, 0x4c,
	0xcd, 0x5c, 0x2c, 0x69, 0xe8, 0x39, 0xd6, 0xf2, 0x6e, 0x8e, 0x65, 0x0d, 0x27, 0xd7, 0xf6, 0xec,
	0x3d, 0x56, 0x4e, 0xd4, 0x18, 0xab, 0xd4, 0x02, 0x38, 0xb6, 0xba, 0x68, 0x6a, 0x3d, 0x71, 0xb3,
	0x66, 0x17, 0x6b, 0xa7, 0x7a, 0xec, 0x22, 0x68, 0xfd, 0x41, 0xf3, 0xfa, 0xa9, 0x1e, 0xbb, 0xd8,
	0xd0, 0x3f, 0xf2, 0xe6, 0xfe, 0xf3, 0x0d, 0x36, 0xe9, 0x15, 0xd4, 0xa7, 0x1e, 0xfb, 0x64, 0xd9,
	0x0b, 0x65, 0xb4, 0x56, 0x15, 0xf5, 0xb5, 0x4d, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x35,
	0xbe, 0x0a, 0x7d, 0x03, 0x00, 0x00,
}
