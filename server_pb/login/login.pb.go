// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login.proto

package login

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// LoginRequest 登录请求
type LoginRequest struct {
	AccountId            uint64   `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RequestData          []byte   `protobuf:"bytes,2,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`
	PlayerId             uint64   `protobuf:"varint,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_login_243c3df6aa448456, []int{0}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *LoginRequest) GetRequestData() []byte {
	if m != nil {
		return m.RequestData
	}
	return nil
}

func (m *LoginRequest) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *LoginRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// LoginResponse 登录应答
type LoginResponse struct {
	ErrCode              uint32   `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	PlayerId             uint64   `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_login_243c3df6aa448456, []int{1}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (dst *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(dst, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *LoginResponse) GetPlayerId() uint64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "login.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "login.LoginResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoginServiceClient is the client API for LoginService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoginServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
}

type loginServiceClient struct {
	cc *grpc.ClientConn
}

func NewLoginServiceClient(cc *grpc.ClientConn) LoginServiceClient {
	return &loginServiceClient{cc}
}

func (c *loginServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/login.LoginService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoginServiceServer is the server API for LoginService service.
type LoginServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
}

func RegisterLoginServiceServer(s *grpc.Server, srv LoginServiceServer) {
	s.RegisterService(&_LoginService_serviceDesc, srv)
}

func _LoginService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.LoginService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoginService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "login.LoginService",
	HandlerType: (*LoginServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _LoginService_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "login.proto",
}

func init() { proto.RegisterFile("login.proto", fileDescriptor_login_243c3df6aa448456) }

var fileDescriptor_login_243c3df6aa448456 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x71, 0xdb, 0x40, 0x73, 0x4d, 0x97, 0xa3, 0x43, 0x00, 0x21, 0x85, 0x4c, 0x99, 0x3a,
	0x00, 0xff, 0x80, 0x2e, 0x95, 0x98, 0xcc, 0x8c, 0x22, 0x13, 0x9f, 0x50, 0x44, 0xe5, 0x0b, 0x17,
	0x17, 0x89, 0x99, 0x3f, 0x8e, 0x6a, 0x7b, 0x68, 0x87, 0x6e, 0x7e, 0x9f, 0xac, 0x4f, 0xef, 0x1e,
	0x2c, 0x76, 0xfc, 0xd9, 0xbb, 0xf5, 0x20, 0xec, 0x19, 0xb3, 0x10, 0xea, 0x3f, 0x05, 0xc5, 0xeb,
	0xe1, 0xa5, 0xe9, 0x7b, 0x4f, 0xa3, 0xc7, 0x7b, 0x00, 0xd3, 0x75, 0xbc, 0x77, 0xbe, 0xed, 0x6d,
	0xa9, 0x2a, 0xd5, 0xcc, 0x74, 0x9e, 0xc8, 0xd6, 0xe2, 0x03, 0x14, 0x12, 0x7f, 0xb6, 0xd6, 0x78,
	0x53, 0x4e, 0x2a, 0xd5, 0x14, 0x7a, 0x91, 0xd8, 0xc6, 0x78, 0x83, 0x77, 0x90, 0x0f, 0x3b, 0xf3,
	0x4b, 0x72, 0x10, 0x4c, 0x83, 0x60, 0x1e, 0xc1, 0xd6, 0xe2, 0x0a, 0x32, 0xcf, 0x5f, 0xe4, 0xca,
	0x59, 0xa5, 0x9a, 0x5c, 0xc7, 0x50, 0xbf, 0xc3, 0x32, 0x95, 0x18, 0x07, 0x76, 0x23, 0xe1, 0x0d,
	0xcc, 0x49, 0xa4, 0xed, 0xd8, 0x52, 0xe8, 0xb0, 0xd4, 0x57, 0x24, 0xf2, 0xc2, 0x96, 0x4e, 0xf5,
	0x93, 0x73, 0xfa, 0xe9, 0x91, 0xfe, 0x71, 0x93, 0x6e, 0x7c, 0x23, 0xf9, 0xe9, 0x3b, 0xc2, 0x67,
	0xc8, 0x42, 0xc6, 0xeb, 0x75, 0x9c, 0xe4, 0x78, 0x81, 0xdb, 0xd5, 0x29, 0x8c, 0x8d, 0xea, 0x8b,
	0x8f, 0xcb, 0x30, 0xdc, 0xd3, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x92, 0x24, 0x2f, 0x47,
	0x01, 0x00, 0x00,
}
